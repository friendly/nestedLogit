[{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"models-for-polytomous-responses","dir":"Articles","previous_headings":"","what":"Models for polytomous responses","title":"Nested-dichotomies logistic regression models","text":"familiar logistic-regression model applies binary (“dichotomous”) response, “survived” vs. “died”, voted “yes” vs. “” referendum. Often, however, response variable multi-category (“polytomous”), taking \\(m > 2\\) discrete values. example, Respondents social survey classified highest completed level education, taking values (1) less highschool, (2) highschool graduate, (3) post-secondary, (4) post-secondary degree. Women’s labor-force participation classified (1) working outside home, (2) working parttime, (3) working fulltime. Voters Quebec Canadian national election choose one (1) Liberal Party, (2) Conservative Party, (3) New Democratic Party, (4) Bloc Quebecois. numbers examples, (1), (2), etc., category labels, categories may ordered (first two examples) may (third). several different ways model category probabilities polytomous response. Let \\(\\phi_{ij} \\equiv \\phi_j \\, ( \\vec{x}_i )\\) probability response \\(j\\) case \\(\\), given predictors \\(\\vec{x}_i\\). \\(\\sum_j \\, \\phi_{ij} = 1\\), \\(m - 1\\) probabilities imply last; example, \\(\\phi_{im} = 1 - \\sum_{j = 1}^{m - 1} \\, \\phi_{ij}\\). essential idea construct model polytomous response composed \\(m-1\\) logit comparisons among response categories manner analogous treatment factors predictor variables. also restrictive models specifically ordered categorical responses, consider .","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"multinomial-logit-model","dir":"Articles","previous_headings":"Models for polytomous responses","what":"Multinomial logit model","title":"Nested-dichotomies logistic regression models","text":"One natural generalization standard logistic-regression (logit) model multinomial logit (generalized logit) model. polytomous response \\(m\\) levels, multinomial logit model comprises \\(m-1\\) log-odds comparisons reference level, typically first last, described Fox (2016, sec. 14.2.1) Friendly & Meyer (2016, sec. 8.3). inessential choice, likelihood model fitted response probabilities produces unaffected choice reference level, much choice reference level dummy regressors created factor predictor doesn’t affect fit regression model. standard implementation model R multinom() nnet package (Venables & Ripley, 2002), takes first level response omitted reference category.","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"nested-dichotomies-logit-model","dir":"Articles","previous_headings":"Models for polytomous responses","what":"Nested-dichotomies logit model","title":"Nested-dichotomies logistic regression models","text":"uses familiar dichotomous logit model, fitting separate models hierarchically nested set binary comparisons among response categories, nested-dichotomies logit model can simpler alternative multinomial logit model. Standard methods model summaries, tests graphs can employed constituent binary logit models, taken together, set \\(m-1\\) models comprises complete model polytomous response, just multinomial logit model . approach described Fienberg (1980) also discussed Fox (2016, sec. 14.2.2) Friendly & Meyer (2016, sec. 8.2). \\(m\\)-category response model-matrix \\(p\\) regressors, nested-dichotomies logit model multinomial logit model \\(p \\times (m - 1)\\) parameters. models equivalent, however, generally produce different sets fitted category probabilities hence different likelihoods. construction nested dichotomies, submodels statistically independent (likelihood polytomous response product likelihoods dichotomies), test statistics, likelihood ratio (\\(G^2\\)) Wald chi-square tests regression coefficients can summed give overall tests full polytomy. way, \\(m-1\\) dichotomies analogous \\(m-1\\) orthogonal contrasts \\(m\\)-level factor balanced ANOVA design. Alternative sets nested dichotomies illustrated figure , four-category polytomous response response \\(Y = \\{1, 2, 3, 4\\}\\). case shown left figure, response categories divided first \\(\\{1, 2\\}\\) vs. \\(\\{3, 4\\}\\). compound categories subdivided dichotomies \\(\\{1\\}\\) vs. \\(\\{2\\}\\) \\(\\{3\\}\\) vs. \\(\\{4\\}\\). Alternatively, shown right figure, response categories divided progressively: first \\(\\{1\\}\\) vs. \\(\\{2, 3, 4\\}\\); next \\(\\{2\\}\\) vs. \\(\\{3, 4\\}\\); finally \\(\\{3\\}\\) vs. \\(\\{4\\}\\). Nested dichotomies: boxes show two different ways four-category response can represented three nested dichotomies. example makes clear nested dichotomies unique alternative sets nested dichotomies equivalent: Different choices different interpretations. Moreover, fundamentally, fitted probabilities hence likelihood nested-dichotomies model depend nested dichotomies defined. nested-dichotomies model consequently compelling natural unique way define dichotomies, process proceeds orderly sequence stages. Consider set nested dichotomies right figure , previously mentioned four-level educational response variable categories (1) less highschool, (2) highschool graduate, (3) post-secondary, (4) post-secondary degree. vast majority cases, individuals proceed educational stages sequence. first dichotomy, \\(\\{1\\}\\) vs. \\(\\{2, 3, 4\\}\\), therefore represents highschool graduation; second, \\(\\{2\\}\\) vs. \\(\\{3, 4\\}\\), enrollment post-secondary education; third, \\(\\{3\\}\\) vs. \\(\\{4\\}\\), completion post-secondary degree. scheme generating nested-dichotomies logit model termed continuation logits. take another example, figure shows classification psychiatric patients four diagnostic categories. might naturally dichotomized contrasting normal individuals groups patients, dividing patient groups comparison depressed manic patients vs. schizophrenics, followed comparison depressed vs. manic patients. model predicting diagnosis can interpreted terms probabilities classification response categories. Psychiatric classification: figure shows four diagnostic categories might represented nested dichotomies.","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"example-womens-labor-force-participation","dir":"Articles","previous_headings":"","what":"Example: Women’s labor-force participation","title":"Nested-dichotomies logistic regression models","text":"principal example, consider data set Womenlf carData package (Fox, Weisberg, & Price, 2022). data give responses 263 young married women, 21–30 years old, drawn 1977 survey carried York University Institute Social Research (Atkinson, Blishen, Ornstein, & Stevenson, 1984). example originally developed Fox (1984, sec. 5.1.5). variables model : \"fulltime\": working full-time \".work\": working outside home \"parttime\" : working part-time. hincome: Husband’s income, $1,000s. children: Presence children home, \"absent\" \"present\". region: Region Canada (“Atlantic”, “BC”, “Ontario”, “Prairie”, “Quebec”). response, partic factor, levels ordered alphabetically. facilitate interpretation, reorder levels partic: 1977, majority 263 women sample working outside home:","code":"data(Womenlf, package = \"carData\") Womenlf$partic <- with(Womenlf,                         factor(partic, levels = c(\"not.work\", \"parttime\", \"fulltime\"))) xtabs(~ partic, data=Womenlf) #> partic #> not.work parttime fulltime  #>      155       42       66"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"defining-nested-dichotomies","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Defining nested dichotomies","title":"Nested-dichotomies logistic regression models","text":"can understand womens’ labor-force participation choices terms explanatory variables? ’ll consider three polytomous logit models Womenlf data, two entail different choices nested dichotomies, multinomial logit model. example illustrate potential pitfalls advantages nested-dichotomies approach context isn’t compelling choice nested dichotomies. least arguable construe woman’s labor-force choice first involving dichotomy (let’s call work) women working outside home vs. working (either parttime fulltime). second dichotomy (full) contrasts work fulltime time vs. parttime, among work. two binary variables nested dichotomies can created recoding partic follows. Note complete sample 263 cases available work dichotomy, 108 cases—excluding working outside home—available full dichotomy: relationship response variable partic two nested dichotomies follows: can fit separate binary logit models two nested dichotomies directly: equation form, two log-odds models shown . (Model equations conveniently rendered markdown/LaTeX using equatiomatic package (Anderson, Heiss, & Sumners, 2023).) \\[ L_1 =\\log\\left[ \\frac { P( \\operatorname{work} = \\operatorname{1} ) }{ 1 - P( \\operatorname{work} = \\operatorname{1} ) } \\right] = \\alpha_1 + \\beta_{11}(\\operatorname{hincome}) + \\beta_{12}(\\operatorname{children}_{\\operatorname{present}}) \\] \\[ L_2 = \\log\\left[ \\frac { P( \\operatorname{full} ) }{ 1 - P( \\operatorname{full} ) } \\right] = \\alpha_2 + \\beta_{21}(\\operatorname{hincome}) + \\beta_{22}(\\operatorname{children}_{\\operatorname{present}}) \\] estimated regression coefficients two binary logit models disadvantage approach tedious obtain tests combined model, compute plot predicted probabilities, forth.","code":"Womenlf <- within(Womenlf, {   work = ifelse(partic == \"not.work\", 0, 1)   full = ifelse(partic == \"fulltime\",  1,                 ifelse(partic == \"parttime\", 0, NA)) }) xtabs(~ work, data=Womenlf) #> work #>   0   1  #> 155 108 xtabs(~ full, data=Womenlf, addNA=TRUE) #> full #>    0    1 <NA>  #>   42   66  155 xtabs(~ partic + work, data=Womenlf) #>           work #> partic       0   1 #>   not.work 155   0 #>   parttime   0  42 #>   fulltime   0  66 xtabs(~ partic + full, addNA=TRUE, data=Womenlf) #>           full #> partic       0   1 <NA> #>   not.work   0   0  155 #>   parttime  42   0    0 #>   fulltime   0  66    0 mod.work <- glm(work ~ hincome + children, family=binomial, data=Womenlf) mod.full <- glm(full ~ hincome + children, family=binomial, data=Womenlf) mod.work #>  #> Call:  glm(formula = work ~ hincome + children, family = binomial, data = Womenlf) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>          1.3358          -0.0423          -1.5756   #>  #> Degrees of Freedom: 262 Total (i.e. Null);  260 Residual #> Null Deviance:       356  #> Residual Deviance: 320   AIC: 326 mod.full #>  #> Call:  glm(formula = full ~ hincome + children, family = binomial, data = Womenlf) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>           3.478           -0.107           -2.651   #>  #> Degrees of Freedom: 107 Total (i.e. Null);  105 Residual #>   (155 observations deleted due to missingness) #> Null Deviance:       144  #> Residual Deviance: 104   AIC: 110"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"using-dichotomy-and-logits-to-define-the-response","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Using dichotomy() and logits() to define the response","title":"Nested-dichotomies logistic regression models","text":"Instead, nestedLogit package provides tools specify manipulate nested-logit model. dichotomy() function defines single dichotomy, logits() function uses \\(m-1\\) calls dichotomy() create \"dichotomies\" object representing nested dichotomies. example: mandatory name dichotomies (work full), can optionally name elements dichotomy, option particularly useful compound category, working=c(\"parttime\", \"fulltime\") example. coercion functions convert set nested dichotomies matrix character string, representing tree structure dichotomies:","code":"comparisons <- logits(work=dichotomy(\"not.work\", working=c(\"parttime\", \"fulltime\")),                       full=dichotomy(\"parttime\", \"fulltime\"))  comparisons #> work: {not.work} vs. working{parttime, fulltime} #> full: {parttime} vs. {fulltime} as.matrix(comparisons) #>      not.work parttime fulltime #> work        0        1        1 #> full       NA        0        1  cat(as.character(comparisons)) #> work = {{not.work}} {working{parttime fulltime}}; full = {{parttime}} {{fulltime}}"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"using-nestedlogit-to-fit-the-model","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Using nestedLogit() to fit the model","title":"Nested-dichotomies logistic regression models","text":"fit model, supply comparisons dichotomies argument nestedLogit() function. model formula argument, partic ~ hincome + children specifies main-effects model husband’s income presence young children; aside dichotomies argument, general format function call typical R statistical modeling function (optional subset contrasts arguments shown example). atypical feature nestedLogit() data argument required. result, wlf.nested, object class \"nestedLogit\", encapsulating details model nested dichotomies. models component object contains essentially \"glm\" model objects constructed directly mod.work mod.full , named work full.","code":"wlf.nested <- nestedLogit(partic ~ hincome + children,                            dichotomies = comparisons,                           data=Womenlf) names(wlf.nested) #> [1] \"models\"          \"formula\"         \"dichotomies\"     \"data\"            #> [5] \"data.name\"       \"subset\"          \"contrasts\"       \"contrasts.print\"  names(wlf.nested$models) # equivalent: names(models(wlf.models)) #> [1] \"work\" \"full\"  # view the separate models; same as lapply(models(wlf.nested), I) models(wlf.nested, 1)  #>  #> Call:  glm(formula = work ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>          1.3358          -0.0423          -1.5756   #>  #> Degrees of Freedom: 262 Total (i.e. Null);  260 Residual #> Null Deviance:       356  #> Residual Deviance: 320   AIC: 326  models(wlf.nested, 2) #>  #> Call:  glm(formula = full ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>           3.478           -0.107           -2.651   #>  #> Degrees of Freedom: 107 Total (i.e. Null);  105 Residual #>   (155 observations deleted due to missingness) #> Null Deviance:       144  #> Residual Deviance: 104   AIC: 110"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"methods-for-nestedlogit-objects","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Methods for \"nestedLogit\" objects","title":"Nested-dichotomies logistic regression models","text":"befits model-fitting function, package defines nearly complete set methods \"nestedLogit\" objects: print() summary() print results submodels. update() re-fits model, allowing changes model formula, data, subset, contrasts arguments. coef() returns coefficients predictors dichotomy. vcov() returns variance-covariance matrix coefficients predict() computes predicted probabilities response categories, either cases data, equivalent fitted(), arbitrary combinations predictors; latter useful producing plots aid interpretation. glance() tidy() extensions broom::glance.glm() broom::tidy.glm() obtain compact summaries \"nestedLogit\" model object. plot() provides basic plots predicted probabilities range values predictor variables. models() extractor function binary logit models \"nestedLogit\" object functions supplemented various methods testing hypotheses comparing nested-logit models: anova() provides analysis--deviance Type (sequential) tests dichotomy combined model. given sequence model objects, anova() tests models one another order specified. Anova() uses car::Anova() provide analysis--deviance Type II III (partial) tests dichotomy combined model. linearHypothesis() computes Wald tests hypotheses coefficients linear combinations. logLik() returns log-likelihood degrees freedom nested-dichotomies logit model. logLik(), AIC() BIC() functions compute Akaike Bayesian information criteria model-comparison statistics. illustrate application methods: Coefficients: default, coef() returns matrix whose rows regressors model whose columns represent nested dichotomies. Womenlf example, coefficients \\(\\widehat{\\beta}_{j1}\\) give estimated change log-odds working vs. working associated $1,000 increase husband’s income children present vs. absent, holding constant. coefficients \\(\\widehat{\\beta}_{j2}\\) similar log-odds working fulltime vs. parttime among working outside home. exponentiated coefficients \\(e^{\\widehat{\\beta}_{jk}}\\) give multiplicative effects odds comparisons. Thus, odds working working fulltime decrease husband’s income, 4% 10% respectively per $1000. young children also decreases odds working working fulltime, 79% 93% respectively. Analysis deviance: method Anova() function car package (Fox & Weisberg, 2019) computes Type II III likelihood-ratio Wald tests term model. Note likelihood-ratio Wald \\(\\chi^2\\) degrees freedom Combined Responses sum values separate dichotomies: Linear hypotheses: linearHypothesis() function car package provides general method computing Wald tests specific hypotheses individual coefficients model linear combinations. example, following command tests hypothesis coefficients hincome children simultaneously equal zero. equivalent test global null model, \\(H_0\\): \\(\\beta_{jk} = 0\\) \\(j = 1,2; k=1,2\\) alternative one coefficients \\(\\beta_{jk} \\ne 0\\). linearHypothesis() reports test submodels dichotomies work full, well combined model: Tidy summaries: broom package (Robinson, Hayes, & Couch, 2023) provides functions compact tidy summaries fitted models. glance() method \"nestedLogit\" model produces one-line summary statistics dichotomy. tidy() method combines coefficients sub-models, together test statistics: functions facilitate construction custom tables. example, extract likelihood-ratio difference--deviance (\\(G^2\\)) tests compute (\\(G^2 / df\\)): Model updating: update() function makes easy create new model old one, adding subtracting terms model formula, specifying new formula, changing observations used contrasts factors. example, might ask, “make sense include region Canada model Womenlf data?” question can answered adding region model formula, comparing new model original one using anova(). tests additional contribution region main effects hincome children: Recall anova() two models tests models sequentially one another, order specified. assumes models compared nested (unintentional pun), sense terms smaller model sequential pair subset larger model. similar manner, fit test wider scope models. example add interaction husband’s income children test interaction term: can see neither region hincome \\(\\times\\) children interaction make difference fit either sub-models combined model three response categories.","code":"coef(wlf.nested) #>                     work    full #> (Intercept)      1.33583  3.4778 #> hincome         -0.04231 -0.1073 #> childrenpresent -1.57565 -2.6515  # show as odds ratios exp(coef(wlf.nested)) #>                   work     full #> (Intercept)     3.8032 32.38753 #> hincome         0.9586  0.89829 #> childrenpresent 0.2069  0.07055 Anova(wlf.nested) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response work: {not.work} vs. working{parttime, fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome      4.83  1      0.028 *   #> children    31.32  1    2.2e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response full: {parttime} vs. {fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome       9.0  1     0.0027 **  #> children     32.1  1    1.4e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>          LR Chisq Df Pr(>Chisq)     #> hincome      13.8  2      0.001 **  #> children     63.5  2    1.7e-14 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 linearHypothesis(wlf.nested, c(\"hincome\", \"childrenpresent\")) #> Linear hypothesis test #>  #> Hypothesis:  #> hincome = 0  #> childrenpresent = 0  #>   #> Model 1: restricted model #> Model 2: partic ~ hincome + children  #>   #> Response work: {not.work} vs. working{parttime, fulltime}  #>   Res.Df Df Chisq Pr(>Chisq)     #> 1    262                         #> 2    260  2  32.2      1e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Response full: {parttime} vs. {fulltime} #>   Res.Df Df Chisq Pr(>Chisq)     #> 1    107                         #> 2    105  2  25.6    2.8e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Combined Responses #> Chisq = 57.813, Df = 4, Pr(>Chisq) = 8.4e-12 glance(wlf.nested)   # summarize the sub-models #> # A tibble: 2 × 9 #>   response null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs #>   <chr>            <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int> #> 1 work              356.     262 -160.   326.  336.     320.         260   263 #> 2 full              144.     107  -52.2  110.  119.     104.         105   108  tidy(wlf.nested)     # summarize the coefficients #> # A tibble: 6 × 6 #>   response term            estimate std.error statistic      p.value #>   <chr>    <chr>              <dbl>     <dbl>     <dbl>        <dbl> #> 1 work     (Intercept)       1.34      0.384       3.48 0.000500     #> 2 work     hincome          -0.0423    0.0198     -2.14 0.0324       #> 3 work     childrenpresent  -1.58      0.292      -5.39 0.0000000700 #> 4 full     (Intercept)       3.48      0.767       4.53 0.00000580   #> 5 full     hincome          -0.107     0.0392     -2.74 0.00615      #> 6 full     childrenpresent  -2.65      0.541      -4.90 0.000000957 gl <- glance(wlf.nested) gl |>    select(response, deviance, df.residual) |>    add_row(response = \"Combined\", deviance = sum(gl$deviance), df.residual = sum(gl$df.residual)) |>   mutate(     `P-value` = pchisq(deviance, df.residual, lower.tail = FALSE),     `$G^2$/df` = deviance / df.residual) |>   rename(`$G^2$` = deviance,          df = df.residual) |>   knitr::kable(digits = 3) wlf.nested.1 <- update(wlf.nested, formula = . ~ . + region)  anova(wlf.nested, wlf.nested.1) #>  #>  Analysis of Deviance Tables #>  Model 1: partic ~ hincome + children #>  Model 2: partic ~ hincome + children + region  #>   #> Response work: {not.work} vs. working{parttime, fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       260        320                      #> 2       256        317  4     2.43     0.66 #>  #>  #> Response full: {parttime} vs. {fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       105        104                      #> 2       101        102  4     2.65     0.62 #>  #>  #> Combined Responses #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       365        424                      #> 2       357        419  8     5.08     0.75 wlf.nested.2 <- update(wlf.nested, formula = . ~ .^2)  anova(wlf.nested, wlf.nested.2) #>  #>  Analysis of Deviance Tables #>  Model 1: partic ~ hincome + children #>  Model 2: partic ~ hincome + children + hincome:children  #>   #> Response work: {not.work} vs. working{parttime, fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       260        320                      #> 2       259        319  1    0.608     0.44 #>  #>  #> Response full: {parttime} vs. {fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       105        104                      #> 2       104        104  1    0.256     0.61 #>  #>  #> Combined Responses #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       365        424                      #> 2       363        423  2    0.864     0.65"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"obtaining-fitted-values-predict","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Obtaining fitted values: predict()","title":"Nested-dichotomies logistic regression models","text":"default, predict() \"nestedLogit\" model object returns predicted probabilities (type = \"response\") response categories observations data set: computation bit tricky, probabilities working full time part time conditional working outside home, predict() takes care details.","code":"car::some(predict(wlf.nested)) #>     not.work parttime fulltime #> 13    0.6504  0.18696  0.16268 #> 27    0.7396  0.20070  0.05974 #> 134   0.3222  0.08251  0.59525 #> 137   0.6968  0.20093  0.10226 #> 143   0.6693  0.19426  0.13640 #> 182   0.3410  0.09661  0.56240 #> 198   0.7925  0.18197  0.02556 #> 212   0.6878  0.19929  0.11291 #> 242   0.3131  0.07607  0.61087 #> 257   0.2225  0.02865  0.74886"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"plotting-nestedlogit-objects","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Plotting \"nestedLogit\" objects","title":"Nested-dichotomies logistic regression models","text":"nestedLogit package includes basic plot() method \"nestedLogit\" models, calculates fitted probabilities response categories plots single explanatory variable horizontal axis, explanatory variables fixed particular values. produce multi-panel plots, necessary call plot() repeatedly various levels predictors, compose single figure, example using par(\"mfcol\"): plot method: Predicted probabilities working working part time full time provide separate vignette constructing custom graphs \"nestedLogit\" objects.","code":"op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1) plot(wlf.nested, \"hincome\", list(children=\"absent\"), # left panel      xlab=\"Husband's Income\", legend.location=\"top\") plot(wlf.nested, \"hincome\", list(children=\"present\"), # right panel      xlab=\"Husband's Income\", legend=FALSE) par(op)"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogit.html","id":"alternative-models-for-the-womenlf-data","dir":"Articles","previous_headings":"Example: Women’s labor-force participation","what":"Alternative models for the Womenlf data","title":"Nested-dichotomies logistic regression models","text":"’ve mentioned nested dichotomies {working} vs. {parttime, fulltime} {parttime} vs. {fulltime} Womenlf data largely arbitrary. alternative set nested dichotomies first contrasts fulltime work categories, {fulltime} vs. {working, parttime}, {working} vs. {part time}. rationale real hurdle young married women enter paid labor force combine fulltime work outside home housework. alternative nested-dichotomies model proves enlightening: Anova() summary() model show effects husband’s income children significant full model part model: ’s apparent alternative model produces simpler description data: predictors husband’s income presence children affect decision work fulltime, decision work parttime among aren’t engaged fulltime work. fits two models data differ? can compare fitted probabilities two specifications: correlations fitted probabilities high far perfect. two models number parameters neither nested within , conventional likelihood-ratio test inappropriate, can still compare maximized log-likelihoods two models: sample sizes numbers parameters two models, differences AIC BIC just twice differences log-likelihoods; example: comparison slightly favors alternative nested-dichotomies model. ’s graph alternative model: Predicted probabilities alternative nested-dichotomies model Compare previous graph original specification. ’s also interest compare nested-dichotomies models multinomial logit model, , explained, treats response categories symmetrically: Check correlation fitted probabilities: turns , multinomial logit model alternative nested-dichotomies model produce nearly identical fits similar simple interpretations.","code":"wlf.nested.alt <- nestedLogit(partic ~ hincome + children,                               logits(full=dichotomy(nonfulltime=c(\"not.work\", \"parttime\"), \"fulltime\"),                                      part=dichotomy(\"not.work\", \"parttime\")),                               data=Womenlf) Anova(wlf.nested.alt) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response full: nonfulltime{not.work, parttime} vs. {fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome      15.1  1      1e-04 *** #> children     63.6  1    1.6e-15 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response part: {not.work} vs. {parttime} #>          LR Chisq Df Pr(>Chisq) #> hincome    0.0851  1       0.77 #> children   0.0012  1       0.97 #>  #>  #> Combined Responses #>          LR Chisq Df Pr(>Chisq)     #> hincome      15.2  2    0.00051 *** #> children     63.6  2    1.6e-14 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  summary(wlf.nested.alt) #> Nested logit models: partic ~ hincome + children #>  #> Response full: nonfulltime{not.work, parttime} vs. {fulltime} #> Call: #> glm(formula = full ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Deviance Residuals:  #>    Min      1Q  Median      3Q     Max   #> -1.745  -0.583  -0.443   0.242   2.378   #>  #> Coefficients: #>                 Estimate Std. Error z value Pr(>|z|)     #> (Intercept)       1.7696     0.4690    3.77  0.00016 *** #> hincome          -0.0987     0.0277   -3.57  0.00036 *** #> childrenpresent  -2.5631     0.3489   -7.35    2e-13 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 296.34  on 262  degrees of freedom #> Residual deviance: 218.81  on 260  degrees of freedom #> AIC: 224.8 #>  #> Number of Fisher Scoring iterations: 5 #>  #> Response part: {not.work} vs. {parttime} #> Call: #> glm(formula = part ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Deviance Residuals:  #>    Min      1Q  Median      3Q     Max   #> -0.757  -0.696  -0.688  -0.671   1.794   #>  #> Coefficients: #>                 Estimate Std. Error z value Pr(>|z|)   #> (Intercept)     -1.42758    0.58222   -2.45    0.014 * #> hincome          0.00687    0.02343    0.29    0.769   #> childrenpresent  0.01629    0.46762    0.03    0.972   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 204.16  on 196  degrees of freedom #> Residual deviance: 204.07  on 194  degrees of freedom #>   (66 observations deleted due to missingness) #> AIC: 210.1 #>  #> Number of Fisher Scoring iterations: 4 fit1 <- predict(wlf.nested) fit2 <- predict(wlf.nested.alt) diag(cor(fit1, fit2)) #> not.work parttime fulltime  #>   0.9801   0.9185   0.9961 logLik(wlf.nested) #> 'log Lik.' -212.1 (df=6) logLik(wlf.nested.alt) #> 'log Lik.' -211.4 (df=6) AIC(wlf.nested, wlf.nested.alt) #>                df   AIC #> wlf.nested      6 436.2 #> wlf.nested.alt  6 434.9 op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1) plot(wlf.nested.alt, \"hincome\", list(children=\"absent\"), # left panel      xlab=\"Husband's Income\", legend.location=\"top\") plot(wlf.nested.alt, \"hincome\", list(children=\"present\"), # right panel      xlab=\"Husband's Income\", legend=FALSE) par(op) wlf.multinom <- multinom(partic ~ hincome + children, data = Womenlf) #> # weights:  12 (6 variable) #> initial  value 288.935032  #> iter  10 value 211.454772 #> final  value 211.440963  #> converged summary(wlf.multinom) #> Call: #> multinom(formula = partic ~ hincome + children, data = Womenlf) #>  #> Coefficients: #>          (Intercept)   hincome childrenpresent #> parttime      -1.432  0.006894         0.02146 #> fulltime       1.983 -0.097232        -2.55861 #>  #> Std. Errors: #>          (Intercept) hincome childrenpresent #> parttime      0.5925 0.02345          0.4690 #> fulltime      0.4842 0.02810          0.3622 #>  #> Residual Deviance: 422.9  #> AIC: 434.9 logLik(wlf.multinom) #> 'log Lik.' -211.4 (df=6) fit3 <- predict(wlf.multinom, type=\"probs\")[, c(\"not.work\", \"parttime\", \"fulltime\")] diag(cor(fit2, fit3)) #> not.work parttime fulltime  #>        1        1        1"},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"models-for-polytomous-responses","dir":"Articles","previous_headings":"","what":"Models for polytomous responses","title":"Nested dichotomies logistic regression models","text":"familiar logistic regression model applies binary (“dichotomous”) response, “survived” vs. “died”, voted “yes” vs. “” referendum. However, often response variable multi-category (“polytomous”), taking \\(m > 2\\) discrete values. example, Respondents U.S. General Social Survey classified level education, taking values <highschool, highschool, college graduate. Women’s labor force participation might classified () working outside home; (b) working parttime; (c) working fulltime. several different ways model response probabilities. Let \\(\\pi_{ij} \\equiv \\pi_j \\, ( \\vec{x}_i )\\) probability response \\(j\\) case group \\(\\), given predictors \\(\\vec{x}_i\\). \\(\\sum_j \\, \\pi_{ij} = 1\\), \\(m - 1\\) probabilities independent. essential idea construct model polytomous response composed \\(m-1\\) logit comparisons among response categories similar way factors treated predictor variables.","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"multinomial-model","dir":"Articles","previous_headings":"Models for polytomous responses","what":"Multinomial model","title":"Nested dichotomies logistic regression models","text":"One natural generalization standard logistic regression logit model multinomial logit (, generalized logit) model. polytomous response \\(m\\) levels, multinomial logit model comprised \\(m-1\\) log odds comparisons reference level, typically last, described Fox (2016), 14.2.1 Friendly & Meyer (2016), 8.3. standard implementation model multinom() nnet package (Ripley, 2022).","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"nested-logit-model","dir":"Articles","previous_headings":"Models for polytomous responses","what":"Nested logit model","title":"Nested dichotomies logistic regression models","text":"sometimes simpler approach, called nested dichotomies, fit collection \\(m-1\\) separate models hierarchically nested set binary comparisons among response categories. simpler, uses familiar logistic regression model dichotomies, standard methods model summaries tests widely available. Taken together, set \\(m-1\\) models comprises complete model polytomous response, just multinomial logit model. approach stems Fienberg (1980) described Fox (2016), 14.2.2 Friendly & Meyer (2016), 8.2. Moreover, construction nested dichotomies, submodels statistically independent (likelihood polytomous response product likelihoods dichotomies), test statistics, likelihood ratio \\(G^2\\) tests tests individual coefficients can added give overall tests full polytomy. way, \\(m-1\\) dichotomies analogous \\(m-1\\) orthogonal contrasts \\(m\\)-level factor ANOVA design. Thus, applicable, nested logit models give best two worlds: dichotomy models: Think , analyze, plot separate model contrast among response categories overall model: Summarize, analyze, plot overall model comprising categories. Dichotomies illustrated figure , response categories \\(Y = \\{1, 2, 3, 4\\}\\) can divided first \\(\\{1, 2\\}\\) vs. \\(\\{3, 4\\}\\). dichotomies can divided \\(\\{1\\}\\) vs. \\(\\{2\\}\\) \\(\\{3\\}\\) vs. \\(\\{4\\}\\). Alternatively, shown right side figure, response categories can divided progressively— first: \\(\\{1\\}\\) vs. \\(\\{2, 3, 4\\}\\), next: \\(\\{2\\}\\) vs. \\(\\{3, 4\\}\\), finally: \\(\\{3\\}\\) vs. \\(\\{4\\}\\). Nested dichotomies: boxes show two different ways four-category response can represented three nested dichotomies. figure makes clear nested dichotomies unique equivalent. Different choices different interpretations different fitted probabilities. models make sense substantive reasons considering response categories terms dichotomies. example, diagram right, make sense categories ordered, \\(1 < 2 < 3 < 4\\), three submodels can interpreted above_1, above_2, above_3. case, scheme generating dichotomies often called continuation logits. another example, figure shows case psychiatric patients classified four diagnostic categories. might considered ordered categories dichotomized 4-category . However, might make better sense dichotomize non-normal groups comparison depressed manic group vs. schizophrenic final contrast depressed manic categories. , model predicting diagnosis can interpreted terms log odds classed dichotomies. independence, ANOVA coefficient tests full multi-category response based sums three dichotomies. Psychiatric classification: figure shows four diagnostic categories might represented nested dichotomies.","code":""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"example-womens-labor-force-participation","dir":"Articles","previous_headings":"","what":"Example: Women’s labor force participation","title":"Nested dichotomies logistic regression models","text":"main example, consider data set Womenlf carData package. data gives responses 263 women 1977 survey carried York University Institute Social Research (Atkinson, Blishen, Ornstein, & Stevenson, 1984). variables : fulltime: working full-time .work: working outside home parttime : working part-time. hincome: Husband’s income, $1,000s children: Presence children home, absent present region: Region Canada (Atlantic, BC, Ontario, Prairie, Quebec) response, partic factor, levels ordered alphabetically. correct , make ordered factor. time, majority 263 women surveyed working. question : can understand womens’ labor choices terms available variables?","code":"data(Womenlf, package = \"carData\") Womenlf <- Womenlf |>   mutate(partic = ordered(partic,                            levels = c(\"not.work\", \"parttime\", \"fulltime\")))  table(Womenlf$partic) #>  #> not.work parttime fulltime  #>      155       42       66"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"defining-dichotomies","dir":"Articles","previous_headings":"Example: Women’s labor force participation","what":"Defining dichotomies","title":"Nested dichotomies logistic regression models","text":"least arguable consider woman’s labor choice first involving dichotomy (work) women working vs. (part time full time). second dichotomy (full) contrasts work full time vs. part time, among work. two binary variables can created re-coding partic data frame follows. Note full sample 263 cases available work dichotomy, 108 cases involved distinction part time full time work. relations partic dichotomies can seen : fit separate models dichotomies manually: two log odds models : \\[ L_1 =\\log\\left[ \\frac { P( \\operatorname{work} = \\operatorname{1} ) }{ 1 - P( \\operatorname{work} = \\operatorname{1} ) } \\right] = \\alpha_1 + \\beta_{11}(\\operatorname{hincome}) + \\beta_{12}(\\operatorname{children}_{\\operatorname{present}}) \\] \\[ L_2 = \\log\\left[ \\frac { P( \\operatorname{full} ) }{ 1 - P( \\operatorname{full} ) } \\right] = \\alpha_2 + \\beta_{21}(\\operatorname{hincome}) + \\beta_{22}(\\operatorname{children}_{\\operatorname{present}}) \\] , difficult obtain tests combined model, get plot predicted values forth.","code":"Womenlf <- Womenlf |>   mutate(work = ifelse(partic==\"not.work\", 0, 1)) |>   mutate(full = case_when(     work & partic == \"fulltime\" ~ 1,     work & partic == \"parttime\" ~ 0)   ) xtabs(~ partic + work, addNA=TRUE, data=Womenlf) #>           work #> partic       0   1 #>   not.work 155   0 #>   parttime   0  42 #>   fulltime   0  66 xtabs(~ partic + full, addNA=TRUE, data=Womenlf) #>           full #> partic       0   1 <NA> #>   not.work   0   0  155 #>   parttime  42   0    0 #>   fulltime   0  66    0 mod.work <- glm(work ~ hincome + children, family=binomial, data=Womenlf) mod.full <- glm(full ~ hincome + children, family=binomial, data=Womenlf)"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"using-dichotomy-and-logits","dir":"Articles","previous_headings":"Example: Women’s labor force participation","what":"Using dichotomy() and logits()","title":"Nested dichotomies logistic regression models","text":"Instead, nestedLogit package provides easier way. dichotomy() function creates list length two defining single dichotomy. logits() function uses \\(m-1\\) calls dichotomy() create list class dichotomies containing symbolic representation contrasts among response categories. convenience, functions convert dichotomies matrix character string representing tree structure dichotomies.","code":"comparisons <- logits(work=dichotomy(\"not.work\", c(\"parttime\", \"fulltime\")),                       full=dichotomy(\"parttime\", \"fulltime\"))  comparisons #> work: {not.work} vs. {parttime, fulltime} #> full: {parttime} vs. {fulltime} as.matrix(comparisons) #>      not.work parttime fulltime #> work        0        1        1 #> full       NA        0        1 as.character(comparisons) #> [1] \"{{not.work}} {{parttime fulltime}}; {{parttime}} {{fulltime}}\""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"fitting-the-nested-logit-model","dir":"Articles","previous_headings":"Example: Women’s labor force participation","what":"Fitting the nested logit model","title":"Nested dichotomies logistic regression models","text":"fit model, specify comparisons dichotomies argument. model formula, partic ~ hincome + children specifies main effects model husband’s income presence young children. result, wlf.nested list containing details model nested dichotomy. models component contains results equivalent fit manually mod.work mod.full.","code":"wlf.nested <- nestedLogit(partic ~ hincome + children,                            dichotomies = comparisons,                           data=Womenlf) names(wlf.nested) #> [1] \"models\"          \"formula\"         \"dichotomies\"     \"data\"            #> [5] \"data.name\"       \"subset\"          \"contrasts\"       \"contrasts.print\" names(wlf.nested$models) # equivalent: names(models(wlf.models)) #> [1] \"work\" \"full\""},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"methods","dir":"Articles","previous_headings":"Example: Women’s labor force participation","what":"Methods","title":"Nested dichotomies logistic regression models","text":"befits model-fitting function, package defines nearly complete set methods \"nestedLogit\" objects: print() summary() print results submodels. update() re-fits model, allowing changes model formula, data, subset, contrasts arguments. coef() returns coefficients predictors dichotomy. vcov() returns variance-covariance matrix predictors. predict() computes predicted probabilities response categories, either cases data arbitrary combinations predictors; latter useful producing plots aid interpretation. glance() tidy() extensions broom::glance.glm() broom::tidy.glm() obtain compact summaries \"nestedLogit\" model object. plot() provides basic plots predicted probabilities range values predictor variables. models() extractor function binary logit models \"nestedLogit\" object supplemented various methods testing hypotheses comparing nested logit models: anova() provides analysis--deviance Type (sequential) tests dichotomy combined model. given sequence model objects, anova() tests models one another order specified. Anova() uses car::Anova() provide analysis--deviance Type II III (partial) tests dichotomy combined model. linearHypothesis() computes Wald tests hypotheses coefficients linear combinations. logLik() returns log-likelihood degrees freedom nested-dichotomies logit model. logLik(), AIC() BIC() functions compute Akaike Bayesian information criteria model-comparison statistics. illustrate : Coefficients: default, coef() returns matrix whose rows terms model whose columns represent nested dichotomies. coefficients, \\(\\mathbf{\\beta_{i1}}\\) give changes log odds working vs. working associated $1,000 increase husband’s income children present vs. absent. \\(\\mathbf{\\beta_{i2}}\\) similar log odds working full time vs. part time among working. \\(e^\\mathbf{\\beta}\\) give multiples odds comparisons. Thus, odds working working full time decrease husband’s income. young children also decreases odds . Anova: Extends Anova() car package (Fox, Weisberg, & Price, 2023), gives Type II tests term model. Note LR \\(\\chi^2\\) df Combined Responses sum values separate dichotomies. linearHypothesis: given model, car::linearHypothesis() provides general method testing specific hypotheses individual coefficients model linear combinations. extended linearHypothesis method \"nestedLogit\" models. example, following call tests hypothesis coefficients hincome children simultaneously equal zero. equivalent test global null model, \\(H_0 : \\mathbf{B} = 0\\) alternative one coefficients \\(\\beta_{ij} \\ne 0\\). linearHypothesis() gives tests submodels, work, full well combined model. glance tidy: broom package (Robinson, Hayes, & Couch, 2023) provides methods giving compact tidy summaries fitted models. glance method \"nestedLogit\" model gives one-line summary statistics dichotomy. tidy method combines coefficients sub-models, together test statistics. functions make easy construct custom tables. example, extract likelihood ratio deviance (\\(G^2\\)) goodness-fit tests compute (\\(G^2 / df\\)), : update: Makes easy create new model old one, adding/subtracting terms model formula changing observations used contrasts factors. example: might ask: “make sense include region Canada model?” can tested adding model formula, comparing new model original one using anova(). significance tests additional contribution region model just includes main effects husincome children. Note anova() two models tests one another, order specified. assumes models compared nested (unintentional pun), sense terms smaller model subset larger model. similar way, fit test larger scope models. example add interaction husband’s income children: can see neither region interaction make difference goodness fit either sub-models combined model three response categories.","code":"coef(wlf.nested) #>                     work    full #> (Intercept)      1.33583  3.4778 #> hincome         -0.04231 -0.1073 #> childrenpresent -1.57565 -2.6515  # show as odds exp(coef(wlf.nested)) #>                   work     full #> (Intercept)     3.8032 32.38753 #> hincome         0.9586  0.89829 #> childrenpresent 0.2069  0.07055 Anova(wlf.nested) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response work: {not.work} vs. {parttime, fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome      4.83  1      0.028 *   #> children    31.32  1    2.2e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response full: {parttime} vs. {fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome       9.0  1     0.0027 **  #> children     32.1  1    1.4e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>          LR Chisq Df Pr(>Chisq)     #> hincome      13.8  2      0.001 **  #> children     63.5  2    1.7e-14 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 linearHypothesis(wlf.nested, c(\"hincome\", \"childrenpresent\")) #> Linear hypothesis test #>  #> Hypothesis:  #> hincome = 0  #> childrenpresent = 0  #>   #> Model 1: restricted model #> Model 2: partic ~ hincome + children  #>   #> Response work: {not.work} vs. {parttime, fulltime}  #>   Res.Df Df Chisq Pr(>Chisq)     #> 1    262                         #> 2    260  2  32.2      1e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Response full: {parttime} vs. {fulltime} #>   Res.Df Df Chisq Pr(>Chisq)     #> 1    107                         #> 2    105  2  25.6    2.8e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Combined Responses #> Chisq = 57.813, Df = 4, Pr(>Chisq) = 8.4e-12 glance(wlf.nested)   # summarize the sub-models #> # A tibble: 2 × 9 #>   response null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs #>   <chr>            <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int> #> 1 work              356.     262 -160.   326.  336.     320.         260   263 #> 2 full              144.     107  -52.2  110.  119.     104.         105   108  tidy(wlf.nested)     # summarize the coefficients #> # A tibble: 6 × 6 #>   response term            estimate std.error statistic      p.value #>   <chr>    <chr>              <dbl>     <dbl>     <dbl>        <dbl> #> 1 work     (Intercept)       1.34      0.384       3.48 0.000500     #> 2 work     hincome          -0.0423    0.0198     -2.14 0.0324       #> 3 work     childrenpresent  -1.58      0.292      -5.39 0.0000000700 #> 4 full     (Intercept)       3.48      0.767       4.53 0.00000580   #> 5 full     hincome          -0.107     0.0392     -2.74 0.00615      #> 6 full     childrenpresent  -2.65      0.541      -4.90 0.000000957 gl <- glance(wlf.nested) gl |>    select(response, deviance, df.residual) |>    add_row(response = \"Combined\", deviance = sum(gl$deviance), df.residual = sum(gl$df.residual)) |>   mutate(     `P-value` = pchisq(deviance, df.residual, lower.tail = FALSE),     `$G^2$/df` = deviance / df.residual) |>   rename(`$G^2$` = deviance,          df = df.residual) |>   knitr::kable(digits = 3) wlf.nested.1 <- update(wlf.nested, formula = . ~ . + region)  anova(wlf.nested, wlf.nested.1) #>  #>  Analysis of Deviance Tables #>  Model 1: partic ~ hincome + children #>  Model 2: partic ~ hincome + children + region  #>   #> Response work: {not.work} vs. {parttime, fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       260        320                      #> 2       256        317  4     2.43     0.66 #>  #>  #> Response full: {parttime} vs. {fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       105        104                      #> 2       101        102  4     2.65     0.62 #>  #>  #> Combined Responses #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       365        424                      #> 2       357        419  8     5.08     0.75 wlf.nested.2 <- update(wlf.nested, formula = . ~ .^2) anova(wlf.nested, wlf.nested.2) #>  #>  Analysis of Deviance Tables #>  Model 1: partic ~ hincome + children #>  Model 2: partic ~ hincome + children + hincome:children  #>   #> Response work: {not.work} vs. {parttime, fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       260        320                      #> 2       259        319  1    0.608     0.44 #>  #>  #> Response full: {parttime} vs. {fulltime} #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       105        104                      #> 2       104        104  1    0.256     0.61 #>  #>  #> Combined Responses #>   Resid. Df Resid. Dev Df Deviance Pr(>Chi) #> 1       365        424                      #> 2       363        423  2    0.864     0.65"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"obtaining-fitted-values-predict","dir":"Articles","previous_headings":"","what":"Obtaining fitted values: predict()","title":"Nested dichotomies logistic regression models","text":"default, predict() \"nestedLogit\" model object returns predicted probabilities (type = \"response\") response categories observations data set. Note computation bit tricky, probabilities working full time part time conditional working outside home.","code":"car::some(predict(wlf.nested)) #>     not.work parttime fulltime #> 13    0.6504  0.18696  0.16268 #> 27    0.7396  0.20070  0.05974 #> 134   0.3222  0.08251  0.59525 #> 137   0.6968  0.20093  0.10226 #> 143   0.6693  0.19426  0.13640 #> 182   0.3410  0.09661  0.56240 #> 198   0.7925  0.18197  0.02556 #> 212   0.6878  0.19929  0.11291 #> 242   0.3131  0.07607  0.61087 #> 257   0.2225  0.02865  0.74886"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Nested dichotomies logistic regression models","text":"nestedLogit package basic plot() method \"nestedLogit\" models. calculates fitted probabilities response categories plots single explanatory variable horizontal axis explanatory variables fixed particular values. produce multi-panel plots, necessary call repeatedly levels variables, compose single figure using par() (knitr chunk options): plot method: Predicted probabilities working working part time full time","code":"op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1) plot(wlf.nested, \"hincome\", list(children=\"absent\"),      xlab=\"Husband's Income\", legend.location=\"top\") plot(wlf.nested, \"hincome\", list(children=\"present\"),      xlab=\"Husband's Income\", legend=FALSE)"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"constructing-plots","dir":"Articles","previous_headings":"Plotting","what":"Constructing plots","title":"Nested dichotomies logistic regression models","text":"explain works, better control details, useful describe can done directly. construct plot, sufficient calculate predicted probabilities grid values predictor variables. , select range 0 - 45 steps 5, combined two values children. fitted values multiple columns, easiest plot using matplot(). plot single (messy) figure, clearer show separate panels children absent present. , plotdata data set subset within loop values children subset plotted matplot. necessary include legend one panel. plots combined single figure using par(mfrow()). matplot: Predicted probabilities working working part time full time","code":"new <- expand.grid(hincome=seq(0, 45, by = 5),                     children=c(\"absent\", \"present\"))  pred.nested <- predict(wlf.nested, newdata = new) plotdata <- cbind(new, pred.nested) head(plotdata) #>   hincome children not.work parttime fulltime #> 1       0   absent   0.2082  0.02372   0.7681 #> 2       5   absent   0.2452  0.03785   0.7169 #> 3      10   absent   0.2864  0.05907   0.6545 #> 4      15   absent   0.3315  0.08936   0.5791 #> 5      20   absent   0.3800  0.12944   0.4906 #> 6      25   absent   0.4309  0.17691   0.3922 op <- par(mfrow=c(1,2), mar=c(4,4,3,1)+.1) cols=c(\"blue\", \"magenta\", \"darkgreen\") for ( kids in c(\"absent\", \"present\") ) {   data <- subset(plotdata, children==kids)   matplot(data[, \"hincome\"], data[, 5:3],            type = \"l\", lwd=3, lty = 1:3, col = cols,           xlab=\"Husband's Income\",            ylab='Fitted Probability',           main = paste(\"Children\", kids),           cex.lab = 1.1)   if (kids==\"absent\") {     legend(\"topright\", lty=1:3, lwd=3, col=cols, bty = \"n\",            legend=c(\"fulltime\", \"parttime\", \"not working\"))   } }"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"using-ggplot","dir":"Articles","previous_headings":"Plotting","what":"Using ggplot","title":"Nested dichotomies logistic regression models","text":"control, perhaps aesthetically pleasing figure can produced using ggplot (Wickham et al., 2023). However, ggplot wants data long format. makes easy plot probability one predictor use color distinguish levels partic facet plot children. , one call ggplot produces panels. sort levels Working appropriately, made ordered factor step , assign colors discrete scale. ggplot: Predicted probabilities working working part time full time","code":"plotlong <- plotdata |>   tidyr::pivot_longer(fulltime : not.work,                       names_to = \"Working\",                       values_to = \"Probability\") |>   mutate(Working = ordered(Working,                             levels = c(\"not.work\", \"parttime\", \"fulltime\")) )  head(plotlong) #> # A tibble: 6 × 4 #>   hincome children Working  Probability #>     <dbl> <fct>    <ord>          <dbl> #> 1       0 absent   fulltime      0.768  #> 2       0 absent   parttime      0.0237 #> 3       0 absent   not.work      0.208  #> 4       5 absent   fulltime      0.717  #> 5       5 absent   parttime      0.0378 #> 6       5 absent   not.work      0.245 gg <- ggplot(plotlong,              aes(x=hincome, y=Probability, color=Working)) +   geom_line(linewidth = 2) +   scale_color_discrete() +   labs(x=\"Husband's Income\", y= \"Probability\") +   facet_wrap(~ children, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = c(.3, .8)) gg"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"direct-labels","dir":"Articles","previous_headings":"Plotting","what":"Direct labels","title":"Nested dichotomies logistic regression models","text":"’s usually nicer label curves directly rely legend. geomtextpath (Cameron & van den Brand, 2022) package offers geom_textline() alternative geom_line() adds text label curve. geomtextpath: Predicted probabilities, labels curves","code":"ggplot(plotlong,        aes(x=hincome, y=Probability, color=Working)) +   geom_textline(aes(label = Working),                 linewidth = 2, size = 5,                  hjust = 0.9, vjust = 0.2) +   scale_color_discrete() +   labs(x=\"Husband's Income\", y= \"Probability\") +   facet_wrap(~ children, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = \"none\")"},{"path":"http://friendly.github.io/nestedLogit/articles/nestedLogits.html","id":"plotting-fitted-log-odds","dir":"Articles","previous_headings":"Plotting","what":"Plotting fitted log odds","title":"Nested dichotomies logistic regression models","text":"sometimes easier interpret logistic regression models plotting linear predictors log odds scale, appear straight lines. , estimated coefficients model, predicted log odds work full given \\[ L_1 =\\log\\left[ \\frac { \\widehat{P( \\operatorname{work} = \\operatorname{1} )} }{ 1 - \\widehat{P( \\operatorname{work} = \\operatorname{1} )} } \\right] = 1.34 - 0.04(\\operatorname{hincome}) - 1.58(\\operatorname{children}_{\\operatorname{present}}) \\] \\[ L_2 =\\log\\left[ \\frac { \\widehat{P( \\operatorname{full} = \\operatorname{1})} }{ 1 - \\widehat{P( \\operatorname{full} = \\operatorname{1})} } \\right] = 3.48 - 0.11(\\operatorname{hincome}) - 2.65(\\operatorname{children}_{\\operatorname{present}}) \\] , \\(\\operatorname{children}_{\\operatorname{present}}\\) either 0 1, amounts shift intercept children present. values can calculated calling predict.glm() directly models component wlf.nested, specifying type = \"link\": plot less : log odds: Predicted logits work full dichotomies Finally, can use ggplot plot fitted logits, first transforming long format. gives flexibility can facet plot either children () Dichotomy. latter nicely shows additive model equal slopes husband’s income within panels: increasing husband’s income decreases log odds working, faster rate full dichotomy. young children decreases log odds working either working fulltime compared parttime. log odds: Predicted logits work full dichotomies","code":"pred.logits <- sapply(models(wlf.nested), predict, newdata=new, type = \"link\") plotdatal <- cbind(new, pred.logits) head(plotdatal) #>   hincome children   work   full #> 1       0   absent 1.3358 3.4778 #> 2       5   absent 1.1243 2.9414 #> 3      10   absent 0.9127 2.4051 #> 4      15   absent 0.7012 1.8688 #> 5      20   absent 0.4897 1.3324 #> 6      25   absent 0.2781 0.7961 cols=c(\"blue\", \"red\")  op <- par(mfrow=c(1,2), mar=c(4,4,3,1)+.1) for ( kids in c(\"absent\", \"present\") ) {   data <- subset(plotdatal, children==kids)   matplot(data[, \"hincome\"], data[, 3:4],           type = \"l\", lwd=3, lty = 1, col = cols,           xlab=\"Husband's Income\",           ylab='Predicted Log Odds',           main = paste(\"Children\", kids),           cex.lab = 1.1)   if (kids==\"absent\") {     legend(\"topright\", lty=1, lwd=3, col=cols, bty = \"n\",            title = \"Dichotomy\",            legend=c(\"work\", \"full\"))   } } plotlongl <- plotdatal |>   tidyr::pivot_longer(work : full,                       names_to = \"Dichotomy\",                       values_to = \"logit\") |>   mutate(Dichotomy = ordered(Dichotomy,                          levels = c(\"work\", \"full\")) ) ggplot(plotlongl,        aes(x=hincome, y=logit, color=children)) +   geom_line(linewidth = 3) +   geom_point(size = 1.5, shape = 16, color = \"black\") +   scale_color_discrete() +   labs(x=\"Husband's Income\", y= \"Log Odds\") +   facet_wrap(~ Dichotomy, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = c(.35, .82)) # write a packages.bib file of the packages (.packages()) that have been used here pkgs <- unique(c(to.cite, .packages())) knitr::write_bib(pkgs, file = here::here(\"vignettes\", \"packages.bib\"))"},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/articles/plotting.html","id":"fitted-probabilities","dir":"Articles","previous_headings":"","what":"Fitted probabilities","title":"Plotting nestedLogit models","text":"draw plot, sufficient calculate predicted probabilities grid values predictor variables. , select range 0 - 45 steps 5, combined two values children.","code":"new <- expand.grid(hincome=seq(0, 45, by = 5),                    children=c(\"absent\", \"present\"))  pred.nested <- predict(wlf.nested, newdata = new) plotdata <- cbind(new, pred.nested) head(plotdata) #>   hincome children not.work parttime fulltime #> 1       0   absent   0.2082  0.02372   0.7681 #> 2       5   absent   0.2452  0.03785   0.7169 #> 3      10   absent   0.2864  0.05907   0.6545 #> 4      15   absent   0.3315  0.08936   0.5791 #> 5      20   absent   0.3800  0.12944   0.4906 #> 6      25   absent   0.4309  0.17691   0.3922"},{"path":"http://friendly.github.io/nestedLogit/articles/plotting.html","id":"using-matplot","dir":"Articles","previous_headings":"Fitted probabilities","what":"Using matplot()","title":"Plotting nestedLogit models","text":"fitted values multiple columns, easiest plot using matplot(). plot single (messy) figure, clearer show separate panels children absent present. , plotdata data set subset within loop values children subset plotted matplot. necessary include legend one panel. plots combined single figure using par(mfrow()). matplot: Predicted probabilities working working part time full time","code":"op <- par(mfrow=c(1,2), mar=c(4,4,3,1)+.1) cols=c(\"blue\", \"magenta\", \"darkgreen\") for ( kids in c(\"absent\", \"present\") ) {   data <- subset(plotdata, children==kids)   matplot(data[, \"hincome\"], data[, 5:3],            type = \"l\", lwd=3, lty = 1:3, col = cols,           xlab=\"Husband's Income\",            ylab='Fitted Probability',           main = paste(\"Children\", kids),           cex.lab = 1.1)   if (kids==\"absent\") {     legend(\"topright\", lty=1:3, lwd=3, col=cols, bty = \"n\",            legend=c(\"fulltime\", \"parttime\", \"not working\"))   } } par(op)"},{"path":"http://friendly.github.io/nestedLogit/articles/plotting.html","id":"using-ggplot","dir":"Articles","previous_headings":"Fitted probabilities","what":"Using ggplot()","title":"Plotting nestedLogit models","text":"control, perhaps aesthetically pleasing figure can produced using ggplot (Wickham et al., 2023). However, ggplot wants data long format. makes easy plot probability one predictor use color distinguish levels partic facet plot children. (result tidyr::pivot_longer() doesn’t recognize ordered nature \"Working\", done separate step.) , one call ggplot produces panels. sort levels Working appropriately, made ordered factor step , assign colors discrete scale. ggplot: Predicted probabilities working working part time full time","code":"plotlong <- plotdata |>   tidyr::pivot_longer(fulltime : not.work,                       names_to = \"Working\",                       values_to = \"Probability\") |>   mutate(Working = ordered(Working,                             levels = c(\"not.work\", \"parttime\", \"fulltime\")) )  head(plotlong) #> # A tibble: 6 × 4 #>   hincome children Working  Probability #>     <dbl> <fct>    <ord>          <dbl> #> 1       0 absent   fulltime      0.768  #> 2       0 absent   parttime      0.0237 #> 3       0 absent   not.work      0.208  #> 4       5 absent   fulltime      0.717  #> 5       5 absent   parttime      0.0378 #> 6       5 absent   not.work      0.245 gg <- ggplot(plotlong,              aes(x=hincome, y=Probability, color=Working)) +   geom_line(linewidth = 2) +   scale_color_discrete() +   labs(x=\"Husband's Income\", y= \"Probability\") +   facet_wrap(~ children, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = c(.3, .8)) gg"},{"path":"http://friendly.github.io/nestedLogit/articles/plotting.html","id":"direct-labels","dir":"Articles","previous_headings":"Fitted probabilities","what":"Direct labels","title":"Plotting nestedLogit models","text":"’s usually nicer label curves directly rely legend. geomtextpath (R-geomtextpath?) package offers geom_textline() alternative geom_line() adds text label curve. hjust vjust position labels along curve. geomtextpath: Predicted probabilities, labels curves","code":"ggplot(plotlong,        aes(x=hincome, y=Probability, color=Working)) +   geom_textline(aes(label = Working),                 linewidth = 2, size = 5,                  hjust = 0.9, vjust = 0.2) +   scale_color_discrete() +   labs(x = \"Husband's Income\", y = \"Probability\") +   facet_wrap(~ children, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = \"none\")"},{"path":"http://friendly.github.io/nestedLogit/articles/plotting.html","id":"plotting-fitted-log-odds","dir":"Articles","previous_headings":"","what":"Plotting fitted log odds","title":"Plotting nestedLogit models","text":"sometimes easier interpret logistic regression models plotting linear predictors log odds scale, appear straight lines. , estimated coefficients model, predicted log odds work full given \\[ L_1 =\\log\\left[ \\frac { \\widehat{P( \\operatorname{work} = \\operatorname{1} )} }{ 1 - \\widehat{P( \\operatorname{work} = \\operatorname{1} )} } \\right] = 1.34 - 0.04(\\operatorname{hincome}) - 1.58(\\operatorname{children}_{\\operatorname{present}}) \\] \\[ L_2 =\\log\\left[ \\frac { \\widehat{P( \\operatorname{full} = \\operatorname{1})} }{ 1 - \\widehat{P( \\operatorname{full} = \\operatorname{1})} } \\right] = 3.48 - 0.11(\\operatorname{hincome}) - 2.65(\\operatorname{children}_{\\operatorname{present}}) \\] , \\(\\operatorname{children}_{\\operatorname{present}}\\) either 0 1, amounts shift intercept children present. values can calculated calling predict.glm() directly models component wlf.nested, specifying type = \"link\": plot less : log odds: Predicted logits work full dichotomies, children Finally, can use ggplot plot fitted logits, first transforming long format. gives flexibility can facet plot either children () Dichotomy. latter nicely shows additive model equal slopes husband’s income within panels: increasing husband’s income decreases log odds working, faster rate full dichotomy. young children decreases log odds working either working fulltime compared parttime. log odds: Predicted logits work full dichotomies, Dichotomy","code":"pred.logits <- sapply(models(wlf.nested), predict, newdata=new, type = \"link\") plotdatal <- cbind(new, pred.logits) head(plotdatal) #>   hincome children   work   full #> 1       0   absent 1.3358 3.4778 #> 2       5   absent 1.1243 2.9414 #> 3      10   absent 0.9127 2.4051 #> 4      15   absent 0.7012 1.8688 #> 5      20   absent 0.4897 1.3324 #> 6      25   absent 0.2781 0.7961 cols <- c(\"blue\", \"red\")  op <- par(mfrow=c(1,2), mar=c(4,4,3,1)+.1) for ( kids in c(\"absent\", \"present\") ) {   data <- subset(plotdatal, children==kids)   matplot(data[, \"hincome\"], data[, 3:4],           type = \"l\", lwd=3, lty = 1, col = cols,           xlab=\"Husband's Income\",           ylab='Predicted Log Odds',           main = paste(\"Children\", kids),           cex.lab = 1.1)   if (kids==\"absent\") {     legend(\"topright\", lty=1, lwd=3, col=cols, bty = \"n\",            title = \"Dichotomy\",            legend=c(\"work\", \"full\"))   } } par(op) plotlongl <- plotdatal |>   tidyr::pivot_longer(work : full,                       names_to = \"Dichotomy\",                       values_to = \"logit\") |>   mutate(Dichotomy = ordered(Dichotomy,                          levels = c(\"work\", \"full\")) ) ggplot(plotlongl,        aes(x=hincome, y=logit, color=children)) +   geom_line(linewidth = 3) +   geom_point(size = 1.5, shape = 16, color = \"black\") +   scale_color_discrete() +   labs(x=\"Husband's Income\", y= \"Log Odds\") +   facet_wrap(~ Dichotomy, labeller = label_both) +   theme_bw(base_size = 14) +   theme(legend.position = c(.35, .82))"},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Fox. Author. Michael Friendly. Author, maintainer. Achim Zeileis. Contributor.","code":""},{"path":"http://friendly.github.io/nestedLogit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fox J, Friendly M (2023). nestedLogit: Nested Dichotomy Logistic Regression Models. R package version 0.2.1, https://github.com/friendly/nestedLogit.","code":"@Manual{,   title = {nestedLogit: Nested Dichotomy Logistic Regression Models},   author = {John Fox and Michael Friendly},   year = {2023},   note = {R package version 0.2.1},   url = {https://github.com/friendly/nestedLogit}, }"},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"nestedlogit-","dir":"","previous_headings":"","what":"Nested Dichotomy Logistic Regression Models","title":"Nested Dichotomy Logistic Regression Models","text":"Version 0.2.1 nestedLogit package provides functions fitting nested dichotomy logistic regression models polytomous response. Nested dichotomies statistically independent, hence provide additive decomposition tests overall polytomous response. dichotomies make sense substantively, method can simpler alternative standard multinomial logistic model compares response categories reference level.","code":""},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Nested Dichotomy Logistic Regression Models","text":"package yet submitted CRAN. development version can installed R library directly GitHub repo via:","code":"if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"friendly/nestedLogit\", build_vignettes = TRUE)"},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"package-overview","dir":"","previous_headings":"","what":"Package overview","title":"Nested Dichotomy Logistic Regression Models","text":"package provides one main function, nestedLogit() fitting set (m−1) binary logistic regression models polytomous response m levels. can specified using helper functions, dichotomy(): constructs single dichotomy among levels response factor; logits(): creates set dichotomies, typically using dichotomy() . continuationLogits(): provides convenient way generate dichotomies ordered response. instance, 4-category response, levels , B, C, D, successive binary splits dichotomies interest specified : Alternatively, nested dichotomies can specified compactly nested (.e., recursive) list optionally named elements. example, people might choose method transportation among categories plane, train, bus, car, sensible set three dichotomies specified : also methods including .matrix.dichotomies(), .character.dichotomies() facilitate working dichotomies objects representations. ABCD example corresponds matrix , whose rows represent dichotomies columns response levels: result nestedLogit() object class \"nestedLogit\". contains set (m−1) glm() models fit dichotomies.","code":"(ABCD <-   logits(AB.CD = dichotomy(c(\"A\", \"B\"), c(\"C\", \"D\")),            A.B = dichotomy(\"A\", \"B\"),            C.D = dichotomy(\"C\", \"D\")          ) ) #> AB.CD: {A, B} vs. {C, D} #> A.B: {A} vs. {B} #> C.D: {C} vs. {D} list(   air = \"plane\",   ground = list(     public = list(\"train\", \"bus\"),     private = \"car\"   )) as.matrix(ABCD) #>        A  B  C  D #> AB.CD  0  0  1  1 #> A.B    0  1 NA NA #> C.D   NA NA  0  1"},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"methods","dir":"","previous_headings":"Package overview","what":"Methods","title":"Nested Dichotomy Logistic Regression Models","text":"befits model-fitting function, package defines nearly complete set methods \"nestedLogit\" objects: print() summary() print results submodels. update() re-fits model, allowing changes model formula, data, subset, contrasts arguments. coef() returns coefficients predictors dichotomy. vcov() returns variance-covariance matrix coefficients predict() computes predicted probabilities response categories, either cases data, equivalent fitted(), arbitrary combinations predictors; latter useful producing plots aid interpretation. glance() tidy() extensions broom::glance.glm() broom::tidy.glm() obtain compact summaries \"nestedLogit\" model object. plot() provides basic plots predicted probabilities range values predictor variables. models() extractor function binary logit models \"nestedLogit\" object functions supplemented various methods testing hypotheses comparing nested-logit models: anova() provides analysis--deviance Type (sequential) tests dichotomy combined model. given sequence model objects, anova() tests models one another order specified. Anova() uses car::Anova() provide analysis--deviance Type II III (partial) tests dichotomy combined model. linearHypothesis() computes Wald tests hypotheses coefficients linear combinations. logLik() returns log-likelihood degrees freedom nested-dichotomies logit model. logLik(), AIC() BIC() functions compute Akaike Bayesian information criteria model-comparison statistics.","code":""},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Nested Dichotomy Logistic Regression Models","text":"example uses data women’s labor force participation fit nested logit model response, partic, representing categories .work, parttime fulltime 263 women 1977 survey Canada. dataset explored detail package vignette, vignette(\"nestedLogits\", package = \"nestedLogit\"). model complete polytomy can specified two nested dichotomies, using helper functions dichotomy() logits(), shown example follows: work: {.work} vs. {parttime, fulltime} full: {parttime} vs. {fulltime}, working nestedLogit() effectively fits dichotomies logistic regression models via glm(..., family = binomial) \"nestedLogit\" object contains: separate models work full dichotomies can extracted via models(): Anova() produces analysis variance deviance tests terms model submodels, well combined responses polytomy. LR Chisq df terms combined model sums submodels.","code":"data(Womenlf, package = \"carData\")  # Use `logits()` and `dichotomy()` to specify the comparisons of interest comparisons <- logits(work=dichotomy(\"not.work\",                                       working=c(\"parttime\", \"fulltime\")),                       full=dichotomy(\"parttime\", \"fulltime\"))  m <- nestedLogit(partic ~ hincome + children,                  dichotomies = comparisons,                  data=Womenlf) coef(m) #>                        work       full #> (Intercept)      1.33582979  3.4777735 #> hincome         -0.04230843 -0.1072679 #> childrenpresent -1.57564843 -2.6514557 names(m) #> [1] \"models\"          \"formula\"         \"dichotomies\"     \"data\"            #> [5] \"data.name\"       \"subset\"          \"contrasts\"       \"contrasts.print\" names(models(m))   # same as names(m$models) #> [1] \"work\" \"full\" car::Anova(m) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response work: {not.work} vs. working{parttime, fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome    4.8264  1    0.02803 *   #> children  31.3229  1  2.185e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response full: {parttime} vs. {fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome     8.981  1   0.002728 **  #> children   32.136  1  1.437e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>          LR Chisq Df Pr(>Chisq)     #> hincome    13.808  2   0.001004 **  #> children   63.459  2   1.66e-14 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"plots","dir":"","previous_headings":"Examples","what":"Plots","title":"Nested Dichotomy Logistic Regression Models","text":"basic plot predicted probabilities can produced using plot() method \"nestedLogit\" objects.","code":"op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1) plot(m, \"hincome\", list(children=\"absent\"),      xlab=\"Husband's Income\", legend=FALSE) plot(m, \"hincome\", list(children=\"present\"),      xlab=\"Husband's Income\") par(op)"},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Nested Dichotomy Logistic Regression Models","text":"general discussion nested dichotomies logistic regression detailed examples can found vignette(\"nestedLogit\", package=\"nestedLogit\") variety plots can produced using base graphics (matplot()) ggplot(), described vignette, vignette(\"plotting\", package=\"nestedLogit\").","code":""},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Nested Dichotomy Logistic Regression Models","text":"John Fox Michael Friendly","code":""},{"path":"http://friendly.github.io/nestedLogit/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Nested Dichotomy Logistic Regression Models","text":"S. Fienberg (1980) Analysis Cross-Classified Categorical Data, 2nd Edition, MIT Press, Section 6.6. J. Fox (2016) Applied Regression Analysis Generalized Linear Models, 3rd Edition, Sage, Section 14.2.2. M. Friendly D. Meyers (2016) Discrete Data Analysis R, CRC Press, Section 8.2.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/broomMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Broom Related Methods — broomMethods","title":"Broom Related Methods — broomMethods","text":"functions give compact summaries \"nestedLogit\" object glance Construct single row summaries dichotomies \"nestedLogit\" model. tidy Summarizes terms \"nestedLogit\" model.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/broomMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broom Related Methods — broomMethods","text":"","code":"# S3 method for nestedLogit glance(x, ...)  # S3 method for nestedLogit tidy(x, ...)"},{"path":"http://friendly.github.io/nestedLogit/reference/broomMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broom Related Methods — broomMethods","text":"x object class \"nestedLogit\". ... arguments passed .","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/broomMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broom Related Methods — broomMethods","text":"","code":"data(Womenlf, package = \"carData\") m <-  nestedLogit(partic ~ hincome + children,                   dichotomies = logits(work=dichotomy(\"not.work\",                                                       working=c(\"parttime\", \"fulltime\")),                                        full=dichotomy(\"parttime\", \"fulltime\")),                   data=Womenlf)  # one-line summaries broom::glance(m) #> # A tibble: 2 × 9 #>   response null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs #>   <chr>            <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int> #> 1 work              356.     262 -160.   326.  336.     320.         260   263 #> 2 full              144.     107  -52.2  110.  119.     104.         105   108 # coefficients and tests broom::tidy(m) #> # A tibble: 6 × 6 #>   response term            estimate std.error statistic      p.value #>   <chr>    <chr>              <dbl>     <dbl>     <dbl>        <dbl> #> 1 work     (Intercept)       1.34      0.384       3.48 0.000500     #> 2 work     hincome          -0.0423    0.0198     -2.14 0.0324       #> 3 work     childrenpresent  -1.58      0.292      -5.39 0.0000000700 #> 4 full     (Intercept)       3.48      0.767       4.53 0.00000580   #> 5 full     hincome          -0.107     0.0392     -2.74 0.00615      #> 6 full     childrenpresent  -2.65      0.541      -4.90 0.000000957"},{"path":"http://friendly.github.io/nestedLogit/reference/GSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Data From the U.S. General Social Survey 1972-2016 — GSS","title":"Data From the U.S. General Social Survey 1972-2016 — GSS","text":"data set drawn U.S. General Social Survey (GSS) years 1972 2016.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/GSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data From the U.S. General Social Survey 1972-2016 — GSS","text":"","code":"data(\"GSS\", package = \"nestedLogit\")"},{"path":"http://friendly.github.io/nestedLogit/reference/GSS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data From the U.S. General Social Survey 1972-2016 — GSS","text":"data frame 44091 rows 3 columns. parentdeg factor representing parents' attained level education (highest \"degree\" obtained), recording higher mother's father's education, levels \"l.t.highschool\", \"highschool\", \"college\", \"graduate\". degree respondent's level education, factor levels parentdeg. year year survey, 1972 code2016.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/GSS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data From the U.S. General Social Survey 1972-2016 — GSS","text":"General Social Survey, NORC, University Chicago https://www.norc.org/Research/Projects/Pages/general-social-survey.aspx.","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/GSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data From the U.S. General Social Survey 1972-2016 — GSS","text":"","code":"round(100*with(GSS, prop.table(table(degree, parentdeg), 2))) #>                 parentdeg #> degree           l.t.highschool highschool college graduate #>   l.t.highschool             39          8       2        2 #>   highschool                 51         68      47       35 #>   college                     6         17      36       36 #>   graduate                    4          7      15       27 m.GSS <- nestedLogit(degree ~ parentdeg*year,                      continuationLogits(c(\"l.t.highschool\",  \"highschool\",                                            \"college\", \"graduate\")),                      data=GSS) car::Anova(m.GSS) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #>                LR Chisq Df Pr(>Chisq)     #> parentdeg        6604.2  3     <2e-16 *** #> year              383.3  1     <2e-16 *** #> parentdeg:year      3.4  3     0.3297     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_highschool: {highschool} vs. {college, graduate} #>                LR Chisq Df Pr(>Chisq)     #> parentdeg        3541.7  3     <2e-16 *** #> year              159.8  1     <2e-16 *** #> parentdeg:year      1.6  3     0.6597     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_college: {college} vs. {graduate} #>                LR Chisq Df Pr(>Chisq)     #> parentdeg       121.317  3  < 2.2e-16 *** #> year             29.074  1  6.966e-08 *** #> parentdeg:year    3.294  3     0.3485     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>                LR Chisq Df Pr(>Chisq)     #> parentdeg       10267.2  9     <2e-16 *** #> year              572.1  3     <2e-16 *** #> parentdeg:year      8.3  9     0.5018     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 summary(m.GSS) #> Nested logit models: degree ~ parentdeg * year #> <environment: 0x000001d7846cb5a0> #>  #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #> Call: #> glm(formula = above_l.t.highschool ~ parentdeg * year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -3.0911   0.2012   0.3663   0.4759   1.1518   #>  #> Coefficients: #>                            Estimate Std. Error z value Pr(>|z|)     #> (Intercept)              -4.177e+01  2.692e+00 -15.519   <2e-16 *** #> parentdeghighschool       6.388e-01  4.971e+00   0.129   0.8977     #> parentdegcollege          2.167e+00  1.499e+01   0.145   0.8851     #> parentdeggraduate        -3.443e+01  2.051e+01  -1.679   0.0931 .   #> year                      2.121e-02  1.353e-03  15.675   <2e-16 *** #> parentdeghighschool:year  6.655e-04  2.496e-03   0.267   0.7898     #> parentdegcollege:year     4.694e-04  7.515e-03   0.062   0.9502     #> parentdeggraduate:year    1.895e-02  1.029e-02   1.841   0.0656 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 40989  on 44090  degrees of freedom #> Residual deviance: 32877  on 44083  degrees of freedom #> AIC: 32893 #>  #> Number of Fisher Scoring iterations: 6 #>  #> Response above_highschool: {highschool} vs. {college, graduate} #> Call: #> glm(formula = above_highschool ~ parentdeg * year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.5694  -0.7969  -0.6455   1.0550   2.0314   #>  #> Coefficients: #>                            Estimate Std. Error z value Pr(>|z|)     #> (Intercept)              -2.605e+01  4.468e+00  -5.829 5.56e-09 *** #> parentdeghighschool       9.091e-01  5.196e+00   0.175    0.861     #> parentdegcollege          4.089e+00  6.542e+00   0.625    0.532     #> parentdeggraduate        -4.807e+00  7.527e+00  -0.639    0.523     #> year                      1.223e-02  2.243e-03   5.454 4.93e-08 *** #> parentdeghighschool:year -1.542e-04  2.607e-03  -0.059    0.953     #> parentdegcollege:year    -1.193e-03  3.279e-03  -0.364    0.716     #> parentdeggraduate:year    3.513e-03  3.772e-03   0.931    0.352     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 44729  on 36343  degrees of freedom #> Residual deviance: 40691  on 36336  degrees of freedom #>   (7747 observations deleted due to missingness) #> AIC: 40707 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Response above_college: {college} vs. {graduate} #> Call: #> glm(formula = above_college ~ parentdeg * year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.1083  -0.9080  -0.8284   1.3797   1.7006   #>  #> Coefficients: #>                            Estimate Std. Error z value Pr(>|z|)   #> (Intercept)               -5.591941   8.422569  -0.664   0.5067   #> parentdeghighschool      -15.751212   9.787684  -1.609   0.1076   #> parentdegcollege         -18.936884  11.182715  -1.693   0.0904 . #> parentdeggraduate        -10.230758  11.213329  -0.912   0.3616   #> year                       0.002556   0.004226   0.605   0.5453   #> parentdeghighschool:year   0.007727   0.004909   1.574   0.1154   #> parentdegcollege:year      0.009285   0.005604   1.657   0.0975 . #> parentdeggraduate:year     0.005210   0.005619   0.927   0.3538   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 14195  on 11098  degrees of freedom #> Residual deviance: 14042  on 11091  degrees of freedom #>   (32992 observations deleted due to missingness) #> AIC: 14058 #>  #> Number of Fisher Scoring iterations: 4 #>"},{"path":"http://friendly.github.io/nestedLogit/reference/HealthInsurance.html","id":null,"dir":"Reference","previous_headings":"","what":"Choice of Health Insurance Product — HealthInsurance","title":"Choice of Health Insurance Product — HealthInsurance","text":"company recently introduced new health insurance provider employees. beginning year employees choose one three (four) different health plan products provider best suit needs. dataset modified original source (McNulty, 2022) present purposes adding fourth choice, sampled randomly original three.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/HealthInsurance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choice of Health Insurance Product — HealthInsurance","text":"","code":"data(\"HealthInsurance\", package = \"nestedLogit\")"},{"path":"http://friendly.github.io/nestedLogit/reference/HealthInsurance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Choice of Health Insurance Product — HealthInsurance","text":"data frame 1448 rows 7 columns. product Choice among three products, factor levels \"\", \"B\", \"C\". product4 Choice among four products, factor levels \"\", \"B\", \"C\", \"D\". age age individual, years. household number people living individual household. position_level Position level company time choice made, 1 lowest level 5 highest, numeric vector. gender gender individual, factor levels \"Female\" \"Male\". absent number days individual absent work year prior choice,","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/HealthInsurance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Choice of Health Insurance Product — HealthInsurance","text":"Originally taken McNulty, K. (2022). Handbook Regression Modeling People Analytics, https://peopleanalytics-regression-book.org/data/health_insurance.csv.","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/HealthInsurance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choice of Health Insurance Product — HealthInsurance","text":"","code":"lbinary <- logits(AB_CD = dichotomy(c(\"A\", \"B\"), c(\"C\", \"D\")),                   A_B   = dichotomy(\"A\", \"B\"),                   C_D   = dichotomy(\"C\", \"D\")) as.matrix(lbinary) #>        A  B  C  D #> AB_CD  0  0  1  1 #> A_B    0  1 NA NA #> C_D   NA NA  0  1 health.nested <- nestedLogit(product4 ~ age  + gender * household + position_level,                              dichotomies = lbinary, data = HealthInsurance)                              car::Anova(health.nested) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response AB_CD: {A, B} vs. {C, D} #>                  LR Chisq Df Pr(>Chisq)     #> age               161.171  1  < 2.2e-16 *** #> gender             30.412  1  3.493e-08 *** #> household         128.772  1  < 2.2e-16 *** #> position_level      0.044  1     0.8344     #> gender:household   16.299  1  5.408e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response A_B: {A} vs. {B} #>                  LR Chisq Df Pr(>Chisq)     #> age               229.664  1  < 2.2e-16 *** #> gender             75.537  1  < 2.2e-16 *** #> household         127.743  1  < 2.2e-16 *** #> position_level     27.164  1  1.869e-07 *** #> gender:household    0.091  1     0.7633     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response C_D: {C} vs. {D} #>                  LR Chisq Df Pr(>Chisq)     #> age               116.663  1  < 2.2e-16 *** #> gender              5.355  1    0.02066 *   #> household          52.861  1   3.58e-13 *** #> position_level      0.018  1    0.89305     #> gender:household    1.545  1    0.21384     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>                  LR Chisq Df Pr(>Chisq)     #> age                507.50  3  < 2.2e-16 *** #> gender             111.30  3  < 2.2e-16 *** #> household          309.38  3  < 2.2e-16 *** #> position_level      27.23  3  5.278e-06 *** #> gender:household    17.94  3  0.0004536 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 coef(health.nested) #>                            AB_CD         A_B          C_D #> (Intercept)          -3.85986638 -2.19851256  4.826064163 #> age                   0.05740364  0.17267537 -0.071680487 #> genderMale            1.46728946 -2.45841955 -0.824955433 #> household             0.40271031 -0.70434692 -0.350313558 #> position_level        0.01029949 -0.56167558 -0.009193197 #> genderMale:household -0.22931808  0.05779896  0.107014721"},{"path":"http://friendly.github.io/nestedLogit/reference/models.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Binary Logit Models from a nestedLogit Object — models","title":"Extract Binary Logit Models from a nestedLogit Object — models","text":"models used extract \"glm\" objects representing binary logit models \"nestedLogit\" object.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Binary Logit Models from a nestedLogit Object — models","text":"","code":"models(model, select, as.list = FALSE)  # S3 method for nestedLogit models(model, select, as.list = FALSE)"},{"path":"http://friendly.github.io/nestedLogit/reference/models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Binary Logit Models from a nestedLogit Object — models","text":"model \"nestedLogit\" model. select numeric character vector giving number(s) names(s) one binary logit models extracted model; absent, list binary logits models model returned. .list TRUE (default FALSE) one binary logit model selected, return \"glm\" object one-element named list; otherwise single model returned directly \"glm\" object; one binary logit model selected, corresponding \"glm\" objects always returned named list.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Binary Logit Models from a nestedLogit Object — models","text":"model returns either single \"glm\" object (see glm) list \"glm\" objects, representing binary logit model.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Binary Logit Models from a nestedLogit Object — models","text":"","code":"data(Womenlf, package = \"carData\")    comparisons <- logits(work=dichotomy(\"not.work\",                                        working=c(\"parttime\", \"fulltime\")),                         full=dichotomy(\"parttime\", \"fulltime\"))   m <- nestedLogit(partic ~ hincome + children,                    dichotomies = comparisons,                    data=Womenlf)    # extract a binomial logit model   models(m, \"work\") #>  #> Call:  glm(formula = work ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>         1.33583         -0.04231         -1.57565   #>  #> Degrees of Freedom: 262 Total (i.e. Null);  260 Residual #> Null Deviance:\t    356.2  #> Residual Deviance: 319.7 \tAIC: 325.7   # use that to plot residuals   plot(density(residuals(models(m, \"work\"))))"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypothesis-Testing and Related Methods for ","title":"Hypothesis-Testing and Related Methods for ","text":"Various methods testing hypotheses nested logit models. Anova Calculates type-II type-III analysis--variance tables \"nestedLogit\" objects; see Anova car package. anova Computes sequential analysis variance (deviance) tables one fitted \"nestedLogit\"  objects; see anova. linearHypothesis Computes Wald tests linear hypotheses; see linearHypothesis car package. logLik Returns log-likelihood degrees freedom nested-dichotomies model. (AIC BIC model-comparison statistics).","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypothesis-Testing and Related Methods for ","text":"","code":"# S3 method for nestedLogit Anova(mod, ...)  # S3 method for Anova.nestedLogit print(x, ...)  # S3 method for nestedLogit linearHypothesis(model, ...)  # S3 method for nestedLogit anova(object, object2, ...)  # S3 method for anova.nestedLogit print(x, ...)  # S3 method for nestedLogit logLik(object, ...)"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypothesis-Testing and Related Methods for ","text":"... arguments passed . case linearHypothesis, second argument typically hypothesis.matrix. See Details section linearHypothesis. case anova, additional sequential \"nestedLogit\" models. x, object, object2, mod, model cases, object class \"nestedLogit\".","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypothesis-Testing and Related Methods for ","text":"Anova anova methods return objects class \"Anova.nestedLogit\" \"anova.nestedLogit\", respectively, contains list \"anova\" objects (see anova) usually printed. linearHypothesis method called side effect, printing result linear hypothesis tests, invisibly returns NULL. logLik method returns object class \"logLik\" (see logLik).","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hypothesis-Testing and Related Methods for ","text":"John Fox","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedHypotheses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypothesis-Testing and Related Methods for ","text":"","code":"# define continuation dichotomies for level of education cont.dichots <- continuationLogits(c(\"l.t.highschool\",                                      \"highschool\",                                      \"college\",                                      \"graduate\")) # fit a nested model for the GSS data examining education degree in relation to parent & year m <- nestedLogit(degree ~ parentdeg + year,                  cont.dichots,                  data=GSS)                   # Anova and anova tests car::Anova(m) # type-II (partial) tests #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #>           LR Chisq Df Pr(>Chisq)     #> parentdeg   6604.2  3  < 2.2e-16 *** #> year         383.3  1  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_highschool: {highschool} vs. {college, graduate} #>           LR Chisq Df Pr(>Chisq)     #> parentdeg   3541.7  3  < 2.2e-16 *** #> year         159.8  1  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_college: {college} vs. {graduate} #>           LR Chisq Df Pr(>Chisq)     #> parentdeg  121.317  3  < 2.2e-16 *** #> year        29.074  1  6.966e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>           LR Chisq Df Pr(>Chisq)     #> parentdeg  10267.2  9  < 2.2e-16 *** #> year         572.1  3  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  anova(update(m, . ~ . - year), m) # model comparison #>  #>  Analysis of Deviance Tables #>  Model 1: degree ~ parentdeg #>  Model 2: degree ~ parentdeg + year  #>   #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1     44087      33263                           #> 2     44086      32880  1   383.29 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_highschool: {highschool} vs. {college, graduate} #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1     36340      40853                           #> 2     36339      40693  1   159.75 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response above_college: {college} vs. {graduate} #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1     11095      14074                           #> 2     11094      14045  1   29.074 6.966e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1     91522      88190                           #> 2     91519      87618  3   572.11 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # Wald test car::linearHypothesis(m, c(\"parentdeghighschool\", \"parentdegcollege\",                            \"parentdeggraduate\")) #> Linear hypothesis test #>  #> Hypothesis:  #> parentdeghighschool = 0  #> parentdegcollege = 0  #> parentdeggraduate = 0  #>   #> Model 1: restricted model #> Model 2: degree ~ parentdeg + year  #>   #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate}  #>   Res.Df Df Chisq Pr(>Chisq)     #> 1  44089                         #> 2  44086  3  5085  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Response above_highschool: {highschool} vs. {college, graduate} #>   Res.Df Df  Chisq Pr(>Chisq)     #> 1  36342                          #> 2  36339  3 3322.4  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Response above_college: {college} vs. {graduate} #>   Res.Df Df  Chisq Pr(>Chisq)     #> 1  11097                          #> 2  11094  3 122.17  < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Combined Responses #> Chisq = 8529.624, Df = 9, Pr(>Chisq) = < 2.22e-16  # log-liklihood, AIC, and BIC logLik(m) #> 'log Lik.' -43809.17 (df=15) AIC(m) #> [1] 87648.33 BIC(m) #> [1] 87778.74"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Logit Models for Nested Dichotomies — nestedLogit","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"Fit related set binary logit models via glm function nested dichotomies, comprising model polytomy. polytomous response \\(m\\) categories can analyzed using \\(m-1\\) binary logit comparisons.  comparisons nested, \\(m-1\\) sub-models statistically independent. Therefore, likelihood chi-square statistics sub-models additive give overall tests model polytomy. method introduced Fienberg (1980),subsequently illustrated Fox(2016) Friendly & Meyer (2016). dichotomy logits helper functions construct dichotomies. continuationLogits constructs set \\(m-1\\) logit comparisons, called continuation logits, ordered response. \\(m=4\\) levels, say, , B, C, D, considered low high: first contrasts B, C, D . second ignores contrasts C, D B. second ignores , B contrasts D C.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"","code":"nestedLogit(formula, dichotomies, data, subset = NULL, contrasts = NULL, ...)  logits(...)  dichotomy(...)  continuationLogits(levels, names, prefix = \"above_\")"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"formula model formula polytomous response left-hand side usual linear-model-like specification right-hand side. dichotomies specification logits nested dichotomies, constructed logits dichotomy functions, continuationLogits. Alternatively, dichotomies can specified nested (.e., recursive) list, elements can given optional names. See Details. data data frame data model; unlike statistical modeling functions, data argument required. Cases NAs variables appearing model formula removed Note message. subset character string specifying expression fit model subset data; default, NULL, uses full data set. contrasts optional list contrast specification specific factors model; see lm details. ... nestedLogit, optional named arguments passed glm; logits, definitions nested logits---named argument specifying dichotomy; dichotomy, two character vectors giving levels defining dichotomy; vectors can optionally named. levels character vector set levels variables number specifying numbers levels (case, uppercase letters use levels). names Names assigned dichotomies; absent, names generated levels. prefix character string (default: \"above_\") used prefix names continuation dichotomies.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"nestedLogit returns object class \"nestedLogit\" containing following elements: models, named list (normally) \\(m - 1\\) \"glm\" objects, binary logit model one \\(m - 1\\) nested dichotomies representing \\(m\\)-level response. formula, model formula nested logit models. dichotomies, \"dichotomies\" object defining nested dichotomies model. data.name, name data set model fit, class \"name\". data, data set model fit. subset, character representation subset argument \"NULL\" argument specified. contrasts, contrasts argument NULL argument specified. contrasts.print character representation contrasts argument \"NULL\" argument specified. logits continuationLogits return objects class \"dichotomies\" c(\"continuationDichotomies\" \"dichotomies\"), respectively, two-elements lists, element containing list two character vectors representing dichotomy. dichotomy returns list two character vectors representing dichotomy.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"dichotomy categorical variable comparison one subset levels another subset. set dichotomies nested, initial dichotomy, subsequent ones within groups levels lumped together earlier ones. Nested dichotomies correspond binary tree successive divisions. example, 3-level response, first dichotomy  {}, {B, C} second one just {B}, {C}. Note second dichotomy, observations response treated NA. function dichotomy constructs single dichotomy required form, list length 2 containing two character vectors giving levels defining dichotomy. function logits used create set dichotomies response factor. Alternatively, nested dichotomies can specified compactly nested (.e., recursive) list optionally named elements; example, list(air=\"plane\", ground=list(public=list(\"train\", \"bus\"), private=\"car\")). function continuationLogits provides convenient way generate dichotomies ordered response. ordered response \\(m=4\\) levels, say, , B, C, D, considered low high: dichotomy first contrasts B, C, D . second ignores contrasts C, D B. second ignores , B contrasts D C.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"S. Fienberg (1980). Analysis Cross-Classified Categorical Data, 2nd Edition, MIT Press, Section 6.6. J. Fox (2016), Applied Linear Regression Generalized Linear Models, 3rd Edition, Sage, Section 14.2.2. J. Fox S. Weisberg (2011), R Companion Applied Regression, 2nd Edition, Sage, Section 5.8. M. Friendly D. Meyers (2016), Discrete Data Analysis R, CRC Press, Section 8.2.","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"John Fox","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedLogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Logit Models for Nested Dichotomies — nestedLogit","text":"","code":"data(Womenlf, package = \"carData\")    #' Use `logits()` and `dichotomy()` to specify the comparisons of interest   comparisons <- logits(work=dichotomy(\"not.work\",                                         working=c(\"parttime\", \"fulltime\")),                         full=dichotomy(\"parttime\", \"fulltime\"))   print(comparisons) #> work: {not.work} vs. working{parttime, fulltime} #> full: {parttime} vs. {fulltime}    m <- nestedLogit(partic ~ hincome + children,                    dichotomies = comparisons,                    data=Womenlf)   print(summary(m)) #> Nested logit models: partic ~ hincome + children #> <environment: 0x000001d784316830> #>  #> Response work: {not.work} vs. working{parttime, fulltime} #> Call: #> glm(formula = work ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.6767  -0.8652  -0.7768   0.9292   1.9970   #>  #> Coefficients: #>                 Estimate Std. Error z value Pr(>|z|)     #> (Intercept)      1.33583    0.38376   3.481   0.0005 *** #> hincome         -0.04231    0.01978  -2.139   0.0324 *   #> childrenpresent -1.57565    0.29226  -5.391    7e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 356.15  on 262  degrees of freedom #> Residual deviance: 319.73  on 260  degrees of freedom #> AIC: 325.73 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Response full: {parttime} vs. {fulltime} #> Call: #> glm(formula = full ~ hincome + children, family = binomial, data = Womenlf,  #>     contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -2.4047  -0.8678   0.3949   0.6213   1.7641   #>  #> Coefficients: #>                 Estimate Std. Error z value Pr(>|z|)     #> (Intercept)      3.47777    0.76711   4.534 5.80e-06 *** #> hincome         -0.10727    0.03915  -2.740  0.00615 **  #> childrenpresent -2.65146    0.54108  -4.900 9.57e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 144.34  on 107  degrees of freedom #> Residual deviance: 104.49  on 105  degrees of freedom #>   (155 observations deleted due to missingness) #> AIC: 110.49 #>  #> Number of Fisher Scoring iterations: 5 #>    print(car::Anova(m)) #>  #>  Analysis of Deviance Tables (Type II tests) #>   #> Response work: {not.work} vs. working{parttime, fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome    4.8264  1    0.02803 *   #> children  31.3229  1  2.185e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Response full: {parttime} vs. {fulltime} #>          LR Chisq Df Pr(>Chisq)     #> hincome     8.981  1   0.002728 **  #> children   32.136  1  1.437e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>  #> Combined Responses #>          LR Chisq Df Pr(>Chisq)     #> hincome    13.808  2   0.001004 **  #> children   63.459  2   1.66e-14 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1   coef(m) #>                        work       full #> (Intercept)      1.33582979  3.4777735 #> hincome         -0.04230843 -0.1072679 #> childrenpresent -1.57564843 -2.6514557      # equivalent;   nestedLogit(partic ~ hincome + children,               dichotomies = list(\"not.work\",                                   working=list(\"parttime\", \"fulltime\")),               data=Womenlf) #> Nested logit models: partic ~ hincome + children #> <environment: 0x000001d784316830> #>  #> Call:  glm(formula = not.work_v_working ~ hincome + children, family = binomial,  #>     data = Womenlf, contrasts = contrasts) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>         1.33583         -0.04231         -1.57565   #>  #> Degrees of Freedom: 262 Total (i.e. Null);  260 Residual #> Null Deviance:\t    356.2  #> Residual Deviance: 319.7 \tAIC: 325.7 #>  #> Call:  glm(formula = parttime_v_fulltime ~ hincome + children, family = binomial,  #>     data = Womenlf, contrasts = contrasts) #>  #> Coefficients: #>     (Intercept)          hincome  childrenpresent   #>          3.4778          -0.1073          -2.6515   #>  #> Degrees of Freedom: 107 Total (i.e. Null);  105 Residual #>   (155 observations deleted due to missingness) #> Null Deviance:\t    144.3  #> Residual Deviance: 104.5 \tAIC: 110.5    # get predicted values   new <- expand.grid(hincome=seq(0, 45, length=10),                      children=c(\"absent\", \"present\"))   pred.nested <- predict(m, new)    # plot   op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1)   plot(m, \"hincome\", list(children=\"absent\"),        xlab=\"Husband's Income\", legend=FALSE)   plot(m, \"hincome\", list(children=\"present\"),        xlab=\"Husband's Income\")    par(op)    continuationLogits(c(\"none\", \"gradeschool\", \"highschool\", \"college\")) #> above_none: {none} vs. {gradeschool, highschool, college} #> above_gradeschool: {gradeschool} vs. {highschool, college} #> above_highschool: {highschool} vs. {college}   continuationLogits(4) #> above_A: {A} vs. {B, C, D} #> above_B: {B} vs. {C, D} #> above_C: {C} vs. {D}"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for ","title":"Methods for ","text":"Various methods processing \"nestedLogit\" related objects. standard methods model-fitting function. coef, vcov Return coefficients variance-covariance matrix respectively. update Re-fit \"nestedLogit\" model change formula, dichotomies, data, subset, contrasts, arguments. predict, fitted Computes predicted values fitted \"nestedLogit\" model. glance Construct single row summaries dichotomies \"nestedLogit\" model. tidy Summarizes terms \"nestedLogit\" model.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for ","text":"","code":"# S3 method for nestedLogit print(x, ...)  # S3 method for nestedLogit summary(object, ...)  # S3 method for summary.nestedLogit print(x, ...)  # S3 method for dichotomies print(x, ...)  # S3 method for nestedLogit predict(object, newdata, model = c(\"nested\", \"dichotomies\"), ...)  # S3 method for predictDichotomies print(x, ...)  # S3 method for nestedLogit fitted(object, model = c(\"nested\", \"dichotomies\"), ...)  # S3 method for nestedLogit coef(object, as.matrix = TRUE, ...)  # S3 method for nestedLogit vcov(object, as.matrix = FALSE, ...)  # S3 method for nestedLogit update(object, formula, dichotomies, data, subset, contrasts, ...)  # S3 method for dichotomies as.matrix(x, ...)  # S3 method for dichotomies as.character(x, ...)  # S3 method for continuationDichotomies as.matrix(x, ...)  as.dichotomies(x, ...)  # S3 method for matrix as.dichotomies(x, ...)"},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for ","text":"x, object cases, object class \"nestedLogit\". ... arguments passed . newdata predict method, data frame containing combinations values predictors fitted probabilities (quantities) computed. model predict fitted methods, either \"nested\" (default), case fitted probabilities nested logit model returned, \"dichotomies\", case predict.glm invoked binary logit model fit nested dichotomies named list results returned. .matrix TRUE (default coef) return coefficients matrix one column nested dichotomy, coefficient covariances matrix one row column combination dichotomies coefficients; FALSE (default vcov), return list coefficients coefficient covariances one element dichotomy. formula optional updated model formula. dichotomies optional updated dichotomies object. data optional updated data argument subset optional updated subset argument. contrasts optional updated contrasts argument.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for ","text":"coef vcov methods return either matrices lists regression coefficients covariances, respectively. update method returns object class \"nestedLogit\" (see nestedLogit) derived original nested-logit model. predict fitted methods return either matrix predicted probabilities object class \"predictDichotomies\", named list predicted logits nested-dichotomy model. glance tidy methods return 'tibbles' containing model summaries. summary method returns object class \"summary.nestedLogit\", list summaries glm objects comprise nested-dichotomies model; object normally printed. methods .matrix, .character, .dichotomies coerce various objects matrices, character vectors, dichotomies objects. various print methods invisibly return x arguments.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for ","text":"predict method provides predicted values two representations model. model = \"nested\" gives fitted probabilities response categories. model = \"dichotomies\" gives fitted log odds binary logit models dichotomies.","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for ","text":"John Fox Michael Friendly","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/nestedMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for ","text":"","code":"# define continuation dichotomies for level of education cont.dichots <- continuationLogits(c(\"l.t.highschool\",                                      \"highschool\",                                      \"college\",                                      \"graduate\"))  # Show dichotomies in various forms print(cont.dichots) #> above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #> above_highschool: {highschool} vs. {college, graduate} #> above_college: {college} vs. {graduate} as.matrix(cont.dichots) #>                      l.t.highschool highschool college graduate #> above_l.t.highschool              0          1       1        1 #> above_highschool                 NA          0       1        1 #> above_college                    NA         NA       0        1 as.character(cont.dichots) #> [1] \"above_l.t.highschool = {{l.t.highschool}} {{highschool college graduate}}; above_highschool = {{highschool}} {{college graduate}}; above_college = {{college}} {{graduate}}\"  # fit a nested model for the GSS data examining education degree in relation to parent & year m <- nestedLogit(degree ~ parentdeg + year,                  cont.dichots,                  data=GSS)  coef(m)                             # coefficient estimates #>                     above_l.t.highschool above_highschool above_college #> (Intercept)                  -42.6261632     -26.21317138 -18.253162254 #> parentdeghighschool            1.9632884       0.60103280  -0.345479234 #> parentdegcollege               3.1006736       1.70574631  -0.414683439 #> parentdeggraduate              3.3512189       2.21122349   0.145720269 #> year                           0.0216427       0.01231442   0.008909557 sqrt(diag(vcov(m, as.matrix=TRUE))) # standard errors #>         above_l.t.highschool.(Intercept)  #>                             2.2232428045  #> above_l.t.highschool.parentdeghighschool  #>                             0.0313786223  #>    above_l.t.highschool.parentdegcollege  #>                             0.0927607066  #>   above_l.t.highschool.parentdeggraduate  #>                             0.1275872686  #>                above_l.t.highschool.year  #>                             0.0011178164  #>             above_highschool.(Intercept)  #>                             1.9459383633  #>     above_highschool.parentdeghighschool  #>                             0.0334567993  #>        above_highschool.parentdegcollege  #>                             0.0410059198  #>       above_highschool.parentdeggraduate  #>                             0.0468809978  #>                    above_highschool.year  #>                             0.0009765976  #>                above_college.(Intercept)  #>                             3.3030647705  #>        above_college.parentdeghighschool  #>                             0.0630462422  #>           above_college.parentdegcollege  #>                             0.0703836929  #>          above_college.parentdeggraduate  #>                             0.0708577702  #>                       above_college.year  #>                             0.0016570885  print(m) #> Nested logit models: degree ~ parentdeg + year #> <environment: 0x000001d7830ffc58> #>  #> Call:  glm(formula = above_l.t.highschool ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Coefficients: #>         (Intercept)  parentdeghighschool     parentdegcollege   #>           -42.62616              1.96329              3.10067   #>   parentdeggraduate                 year   #>             3.35122              0.02164   #>  #> Degrees of Freedom: 44090 Total (i.e. Null);  44086 Residual #> Null Deviance:\t    40990  #> Residual Deviance: 32880 \tAIC: 32890 #>  #> Call:  glm(formula = above_highschool ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Coefficients: #>         (Intercept)  parentdeghighschool     parentdegcollege   #>           -26.21317              0.60103              1.70575   #>   parentdeggraduate                 year   #>             2.21122              0.01231   #>  #> Degrees of Freedom: 36343 Total (i.e. Null);  36339 Residual #>   (7747 observations deleted due to missingness) #> Null Deviance:\t    44730  #> Residual Deviance: 40690 \tAIC: 40700 #>  #> Call:  glm(formula = above_college ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Coefficients: #>         (Intercept)  parentdeghighschool     parentdegcollege   #>           -18.25316             -0.34548             -0.41468   #>   parentdeggraduate                 year   #>             0.14572              0.00891   #>  #> Degrees of Freedom: 11098 Total (i.e. Null);  11094 Residual #>   (32992 observations deleted due to missingness) #> Null Deviance:\t    14200  #> Residual Deviance: 14050 \tAIC: 14060 summary(m) #> Nested logit models: degree ~ parentdeg + year #> <environment: 0x000001d7830ffc58> #>  #> Response above_l.t.highschool: {l.t.highschool} vs. {highschool, college, graduate} #> Call: #> glm(formula = above_l.t.highschool ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -2.9562   0.2012   0.3667   0.4751   1.1549   #>  #> Coefficients: #>                       Estimate Std. Error z value Pr(>|z|)     #> (Intercept)         -42.626163   2.223243  -19.17   <2e-16 *** #> parentdeghighschool   1.963288   0.031379   62.57   <2e-16 *** #> parentdegcollege      3.100674   0.092761   33.43   <2e-16 *** #> parentdeggraduate     3.351219   0.127587   26.27   <2e-16 *** #> year                  0.021643   0.001118   19.36   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 40989  on 44090  degrees of freedom #> Residual deviance: 32880  on 44086  degrees of freedom #> AIC: 32890 #>  #> Number of Fisher Scoring iterations: 6 #>  #> Response above_highschool: {highschool} vs. {college, graduate} #> Call: #> glm(formula = above_highschool ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.5412  -0.7972  -0.6459   1.0354   2.0321   #>  #> Coefficients: #>                       Estimate Std. Error z value Pr(>|z|)     #> (Intercept)         -2.621e+01  1.946e+00  -13.47   <2e-16 *** #> parentdeghighschool  6.010e-01  3.346e-02   17.96   <2e-16 *** #> parentdegcollege     1.706e+00  4.101e-02   41.60   <2e-16 *** #> parentdeggraduate    2.211e+00  4.688e-02   47.17   <2e-16 *** #> year                 1.231e-02  9.766e-04   12.61   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 44729  on 36343  degrees of freedom #> Residual deviance: 40693  on 36339  degrees of freedom #>   (7747 observations deleted due to missingness) #> AIC: 40703 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Response above_college: {college} vs. {graduate} #> Call: #> glm(formula = above_college ~ parentdeg + year, family = binomial,  #>     data = GSS, contrasts = contrasts) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.1162  -0.8957  -0.8315   1.3664   1.6649   #>  #> Coefficients: #>                       Estimate Std. Error z value Pr(>|z|)     #> (Intercept)         -18.253162   3.303065  -5.526 3.27e-08 *** #> parentdeghighschool  -0.345479   0.063046  -5.480 4.26e-08 *** #> parentdegcollege     -0.414683   0.070384  -5.892 3.82e-09 *** #> parentdeggraduate     0.145720   0.070858   2.057   0.0397 *   #> year                  0.008910   0.001657   5.377 7.59e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 14195  on 11098  degrees of freedom #> Residual deviance: 14045  on 11094  degrees of freedom #>   (32992 observations deleted due to missingness) #> AIC: 14055 #>  #> Number of Fisher Scoring iterations: 4 #>   # broom methods broom::glance(m) #> # A tibble: 3 × 9 #>   response      null.deviance df.null  logLik    AIC    BIC deviance df.residual #>   <chr>                 <dbl>   <int>   <dbl>  <dbl>  <dbl>    <dbl>       <int> #> 1 above_l.t.hi…        40989.   44090 -16440. 32890. 32934.   32880.       44086 #> 2 above_highsc…        44729.   36343 -20346. 40703. 40745.   40693.       36339 #> 3 above_college        14195.   11098  -7023. 14055. 14092.   14045.       11094 #> # ℹ 1 more variable: nobs <int> broom::tidy(m) #> # A tibble: 15 × 6 #>    response             term              estimate std.error statistic   p.value #>    <chr>                <chr>                <dbl>     <dbl>     <dbl>     <dbl> #>  1 above_l.t.highschool (Intercept)       -4.26e+1  2.22        -19.2  6.23e- 82 #>  2 above_l.t.highschool parentdeghighsch…  1.96e+0  0.0314       62.6  0         #>  3 above_l.t.highschool parentdegcollege   3.10e+0  0.0928       33.4  5.64e-245 #>  4 above_l.t.highschool parentdeggraduate  3.35e+0  0.128        26.3  4.68e-152 #>  5 above_l.t.highschool year               2.16e-2  0.00112      19.4  1.63e- 83 #>  6 above_highschool     (Intercept)       -2.62e+1  1.95        -13.5  2.33e- 41 #>  7 above_highschool     parentdeghighsch…  6.01e-1  0.0335       18.0  3.70e- 72 #>  8 above_highschool     parentdegcollege   1.71e+0  0.0410       41.6  0         #>  9 above_highschool     parentdeggraduate  2.21e+0  0.0469       47.2  0         #> 10 above_highschool     year               1.23e-2  0.000977     12.6  1.87e- 36 #> 11 above_college        (Intercept)       -1.83e+1  3.30         -5.53 3.27e-  8 #> 12 above_college        parentdeghighsch… -3.45e-1  0.0630       -5.48 4.26e-  8 #> 13 above_college        parentdegcollege  -4.15e-1  0.0704       -5.89 3.82e-  9 #> 14 above_college        parentdeggraduate  1.46e-1  0.0709        2.06 3.97e-  2 #> 15 above_college        year               8.91e-3  0.00166       5.38 7.59e-  8  # predicted probabilities and ploting head(predict(m)) # fitted probabilities for first few cases;  #>   l.t.highschool highschool    college   graduate #> 2     0.48669496  0.4481946 0.04326738 0.02184305 #> 3     0.48669496  0.4481946 0.04326738 0.02184305 #> 4     0.04093763  0.5328723 0.31960957 0.10658049 #> 5     0.48669496  0.4481946 0.04326738 0.02184305 #> 6     0.03215663  0.4161182 0.34830386 0.20342132 #> 7     0.04093763  0.5328723 0.31960957 0.10658049                  # equivalent to head(fitted(m)) new <- expand.grid(parentdeg=c(\"l.t.highschool\",  \"highschool\",                                \"college\", \"graduate\"),                    year=c(1972, 2016)) fit <- predict(m, newdata=new) cbind(new, fit) # fitted probabilities at specific values of predictors #>        parentdeg year l.t.highschool highschool    college   graduate #> 1 l.t.highschool 1972     0.48669496  0.4481946 0.04326738 0.02184305 #> 2     highschool 1972     0.11747919  0.6976573 0.13619288 0.04867067 #> 3        college 1972     0.04093763  0.5328723 0.31960957 0.10658049 #> 4       graduate 1972     0.03215663  0.4161182 0.34830386 0.20342132 #> 5 l.t.highschool 2016     0.26785921  0.5858314 0.08374198 0.06256742 #> 6     highschool 2016     0.04885547  0.6534659 0.19470249 0.10297618 #> 7        college 2016     0.01620361  0.4142339 0.38135421 0.18820832 #> 8       graduate 2016     0.01265796  0.3010734 0.36810041 0.31816823  # predicted logits predictions <- predict(m, newdata=new, model=\"dichotomies\", se.fit=TRUE) predictions #>  #>  predictions for binary logit models from nested logit model: m #>  for responses: above_l.t.highschool above_highschool above_college #>  access via $above_l.t.highschool etc. predictions$above_l.t.highschool # on logit scale #> $fit #>          1          2          3          4          5          6          7  #> 0.05323272 2.01652113 3.15390636 3.40445160 1.00551133 2.96879974 4.10618498  #>          8  #> 4.35673022  #>  #> $se.fit #>          1          2          3          4          5          6          7  #> 0.02522651 0.03467891 0.09442790 0.12890190 0.03466465 0.03730782 0.09412952  #>          8  #> 0.12842860  #>  #> $residual.scale #> [1] 1 #>"},{"path":"http://friendly.github.io/nestedLogit/reference/plot.nestedLogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Nested Logit Models — plot.nestedLogit","title":"Plotting Nested Logit Models — plot.nestedLogit","text":"plot method \"nestedLogit\" objects produced nestedLogit function. Fitted probabilities model plotted level polytomous response variable, one explanatory variables horizontal axis explanatory variables fixed particular values.","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/plot.nestedLogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Nested Logit Models — plot.nestedLogit","text":"","code":"# S3 method for nestedLogit plot(   x,   x.var,   others,   n.x.values = 100L,   xlab = x.var,   ylab = \"Fitted Probability\",   main,   cex.main = 1,   font.main = 1L,   pch = 1L:length(response.levels),   lwd = 3,   lty = 1L:length(response.levels),   col = palette()[1L:length(response.levels)],   legend = TRUE,   legend.inset = 0.01,   legend.location = \"topleft\",   legend.bty = \"n\",   ... )"},{"path":"http://friendly.github.io/nestedLogit/reference/plot.nestedLogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Nested Logit Models — plot.nestedLogit","text":"x object \"nestedLogit\" produced nestedLogit. x.var quoted name variable appear x-axis; omitted, first predictor model used. others named list values variables model, , x.var; predictor omitted, set arbitrary value---mean numeric predictor first level value factor, character, logical predictor; one value may specified variable others. n.x.values number evenly spaced values x.var evaluate fitted probabilities plotted (default 100). xlab label x-axis (defaults value x.var). ylab label y-axis (defaults \"Fitted Probability\"). main main title graph (missing, constructed variables values others). cex.main size main title (see par). font.main font main title (see par). pch plotting characters (see par). lwd line width (see par). lty line types (see par). col line colors (see par). legend TRUE (default), add legend response levels graph. legend.inset default 0.01 (see legend). legend.location position legend (default \"topleft\", see legend). legend.bty type box drawn around legend. allowed values \"o\" (default) \"n\". ... arguments passed matplot.","code":""},{"path":[]},{"path":"http://friendly.github.io/nestedLogit/reference/plot.nestedLogit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plotting Nested Logit Models — plot.nestedLogit","text":"John Fox jfox@mcmaster.ca","code":""},{"path":"http://friendly.github.io/nestedLogit/reference/plot.nestedLogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Nested Logit Models — plot.nestedLogit","text":"","code":"data(Womenlf, package = \"carData\") m <- nestedLogit(partic ~ hincome + children,                  logits(work=dichotomy(\"not.work\", c(\"parttime\", \"fulltime\")),                         full=dichotomy(\"parttime\", \"fulltime\")),                         data=Womenlf) plot(m, legend.location=\"top\") #> Note: hincome will be used for the horizontal axis #> Note: missing predictor children set to its first level, 'absent'  op <- par(mfcol=c(1, 2), mar=c(4, 4, 3, 1) + 0.1) plot(m, \"hincome\", list(children=\"absent\"),      xlab=\"Husband's Income\", legend=FALSE) plot(m, \"hincome\", list(children=\"present\"),      xlab=\"Husband's Income\")  par(op)"},{"path":"http://friendly.github.io/nestedLogit/news/index.html","id":"nestedlogit-021","dir":"Changelog","previous_headings":"","what":"nestedLogit 0.2.1","title":"nestedLogit 0.2.1","text":"Reset par() options() calls alter user’s workspace. now document return values. added reference DESCRIPTION. book, doi:, url, etc. fixed one URL win-builder (spuriously) complains .","code":""},{"path":"http://friendly.github.io/nestedLogit/news/index.html","id":"nestedlogit-020","dir":"Changelog","previous_headings":"","what":"nestedLogit 0.2.0","title":"nestedLogit 0.2.0","text":"Now allow dichotomies specified nested (recursive) binary splits categories [suggestion Achim Zeileis] model object now class “nestedLogit” uniformity. basic plot() method now operational Added linearHypothesis() method give Wald tests hypotheses coefficients linear combinations. Expanded vignette illustrate methods. Added models() generic method extract separate models \"nestedLogit\" object Added logLike() method, , gets AIC() BIC() Reorganized documentation separate nested hypothesis methods.","code":""},{"path":"http://friendly.github.io/nestedLogit/news/index.html","id":"nestedlogit-010","dir":"Changelog","previous_headings":"","what":"nestedLogit 0.1.0","title":"nestedLogit 0.1.0","text":"Initial version Added NEWS.md file track changes package.","code":""}]
